Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2018-01-30T14:18:25+01:00
Author: Davi Lima (davilima6) <davilima6@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/a8c0b41c5ca6fcc0e7d76d0b5a5cf4b9512627fb

Prepare for Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M Products/CMFEditions/ArchivistTool.py
M Products/CMFEditions/CopyModifyMergeRepositoryTool.py
M Products/CMFEditions/StandardModifiers.py
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/browser/diff.py
M Products/CMFEditions/skins/CMFEditions/revertversion.py
M Products/CMFEditions/tests/DummyTools.py
M Products/CMFEditions/tests/large_file_modifiers.txt
M Products/CMFEditions/tests/test_ATContentTypes.py
M Products/CMFEditions/tests/webdav_history.txt
M Products/CMFEditions/utilities.py
M bootstrap.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 3d91042..b885838 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Prepare for Python 2 / 3 compatibility
+  [davilima6]
 
 Bug fixes:
 
diff --git a/Products/CMFEditions/ArchivistTool.py b/Products/CMFEditions/ArchivistTool.py
index 06af845..fa16050 100644
--- a/Products/CMFEditions/ArchivistTool.py
+++ b/Products/CMFEditions/ArchivistTool.py
@@ -24,39 +24,44 @@
 $Id: ArchivistTool.py,v 1.15 2005/06/24 11:34:08 gregweb Exp $
 """
 
-import time
-from StringIO import StringIO
-from cPickle import Pickler, Unpickler
-from zope.interface import implementer, alsoProvides
-
+from AccessControl import ClassSecurityInfo
+from AccessControl import getSecurityManager
+from Acquisition import aq_base
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from App.class_init import InitializeClass
-from Persistence import Persistent
-from Acquisition import aq_base, aq_parent, aq_inner
-from AccessControl import ClassSecurityInfo, getSecurityManager
 from OFS.SimpleItem import SimpleItem
+from Persistence import Persistent
 
-from Products.CMFCore.utils import UniqueObject, getToolByName
-
-from Products.CMFEditions.utilities import KwAsAttributes
-from Products.CMFEditions.utilities import dereference
-from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
-from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
-
+from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.utils import UniqueObject
 from Products.CMFEditions.interfaces import IArchivistTool
+from Products.CMFEditions.interfaces import IVersioned
+from Products.CMFEditions.interfaces.IArchivist import ArchivistError
+from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
+from Products.CMFEditions.interfaces.IArchivist import ArchivistSaveError
+from Products.CMFEditions.interfaces.IArchivist import ArchivistUnregisteredError
 from Products.CMFEditions.interfaces.IArchivist import IArchivist
-from Products.CMFEditions.interfaces.IArchivist import IPurgeSupport
+from Products.CMFEditions.interfaces.IArchivist import IAttributeAdapter
 from Products.CMFEditions.interfaces.IArchivist import IHistory
-from Products.CMFEditions.interfaces.IArchivist import IVersionData
+from Products.CMFEditions.interfaces.IArchivist import IObjectData
 from Products.CMFEditions.interfaces.IArchivist import IPreparedObject
-from Products.CMFEditions.interfaces.IArchivist import IAttributeAdapter
+from Products.CMFEditions.interfaces.IArchivist import IPurgeSupport
 from Products.CMFEditions.interfaces.IArchivist import IVersionAwareReference
-from Products.CMFEditions.interfaces.IArchivist import IObjectData
+from Products.CMFEditions.interfaces.IArchivist import IVersionData
+from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
+from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
+from Products.CMFEditions.utilities import dereference
+from Products.CMFEditions.utilities import KwAsAttributes
+
+from six import StringIO
+from six.moves.cPickle import Pickler
+from six.moves.cPickle import Unpickler
+from zope.interface import alsoProvides
+from zope.interface import implementer
+
+import time
 
-from Products.CMFEditions.interfaces.IArchivist import ArchivistError
-from Products.CMFEditions.interfaces.IArchivist import ArchivistSaveError
-from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
-from Products.CMFEditions.interfaces.IArchivist import ArchivistUnregisteredError
-from Products.CMFEditions.interfaces import IVersioned
 
 RETRIEVING_UNREGISTERED_FAILED = \
     "Retrieving a version of an unregistered object is not possible. " \
@@ -531,11 +536,12 @@ def __init__(self, getItem, stopExceptions):
         self._getItem = getItem
         self._stopExceptions = stopExceptions
         self._pos = -1
+        self.next = self.__next__  # In order to keep compatibility with Python 2
 
     def __iter__(self):
         return self
 
-    def next(self):
+    def __next__(self):
         self._pos += 1
         try:
             return self._getItem(self._pos)
diff --git a/Products/CMFEditions/CopyModifyMergeRepositoryTool.py b/Products/CMFEditions/CopyModifyMergeRepositoryTool.py
index 02f0787..bad72b1 100644
--- a/Products/CMFEditions/CopyModifyMergeRepositoryTool.py
+++ b/Products/CMFEditions/CopyModifyMergeRepositoryTool.py
@@ -25,42 +25,49 @@
 $Id: CopyModifyMergeRepositoryTool.py,v 1.20 2005/06/24 11:42:01 gregweb Exp $
 """
 
-import time
-import transaction
-
-from App.class_init import InitializeClass
-from Acquisition import aq_base, aq_parent, aq_inner
+from AccessControl import ClassSecurityInfo
+from AccessControl import Unauthorized
+from Acquisition import aq_base
+from Acquisition import aq_parent
+from Acquisition import aq_inner
 from Acquisition import ImplicitAcquisitionWrapper
-from AccessControl import ClassSecurityInfo, Unauthorized
-from OFS.SimpleItem import SimpleItem
+from App.class_init import InitializeClass
 from BTrees.OOBTree import OOBTree
-from zope.event import notify
-from zope.interface import implementer, Interface
-from zope.lifecycleevent import ObjectModifiedEvent
-from Products.CMFCore.utils import UniqueObject, getToolByName
+from OFS.SimpleItem import SimpleItem
 from Products.CMFCore.utils import _checkPermission
+from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.utils import UniqueObject
 
-from Products.CMFEditions.utilities import dereference, wrap
 from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
-
+from Products.CMFEditions.interfaces.IModifier import ModifierException
+from Products.CMFEditions.interfaces.IRepository import IContentTypeVersionPolicySupport
 from Products.CMFEditions.interfaces.IRepository import ICopyModifyMergeRepository
+from Products.CMFEditions.interfaces.IRepository import IHistory
 from Products.CMFEditions.interfaces.IRepository import IPurgeSupport
-from Products.CMFEditions.interfaces.IRepository import RepositoryPurgeError
-from Products.CMFEditions.interfaces.IRepository import IContentTypeVersionPolicySupport
 from Products.CMFEditions.interfaces.IRepository import IRepositoryTool
 from Products.CMFEditions.interfaces.IRepository import IVersionData
-from Products.CMFEditions.interfaces.IRepository import IHistory
-
-from Products.CMFEditions.interfaces.IModifier import ModifierException
+from Products.CMFEditions.interfaces.IRepository import RepositoryPurgeError
 
+from Products.CMFEditions.Permissions import AccessPreviousVersions
 from Products.CMFEditions.Permissions import ApplyVersionControl
-from Products.CMFEditions.Permissions import SaveNewVersion
+from Products.CMFEditions.Permissions import ManageVersioningPolicies
 from Products.CMFEditions.Permissions import PurgeVersion
-from Products.CMFEditions.Permissions import AccessPreviousVersions
 from Products.CMFEditions.Permissions import RevertToPreviousVersions
-from Products.CMFEditions.Permissions import ManageVersioningPolicies
-from Products.CMFEditions.VersionPolicies import VersionPolicy
+from Products.CMFEditions.Permissions import SaveNewVersion
+from Products.CMFEditions.utilities import dereference
 from Products.CMFEditions.utilities import STUB_OBJECT_PREFIX
+from Products.CMFEditions.utilities import wrap
+from Products.CMFEditions.VersionPolicies import VersionPolicy
+
+from zope.event import notify
+from zope.interface import implementer
+from zope.interface import Interface
+from zope.lifecycleevent import ObjectModifiedEvent
+
+import six
+import time
+import transaction
+
 
 try:
     from Products.Archetypes.event import ObjectEditedEvent
@@ -230,9 +237,9 @@ def manage_changePolicyDefs(self, policy_list, **kwargs):
                 "List items must be tuples: %s" % str(item)
             assert len(item) in (2, 3, 4), \
                 "Each policy definition must contain a title and id: %s" % str(item)
-            assert isinstance(item[0], basestring), \
+            assert isinstance(item[0], six.string_types), \
                 "Policy id must be a string: %s" % str(item[0])
-            assert isinstance(item[1], basestring), \
+            assert isinstance(item[1], six.string_types), \
                 "Policy title must be a string: %s" % str(item[1])
             # Get optional Policy class and kwargs.
             if len(item) >= 3:
@@ -812,11 +819,12 @@ def __init__(self, getItem, stopExceptions):
         self._getItem = getItem
         self._stopExceptions = stopExceptions
         self._pos = -1
+        self.next = self.__next__  # In order to keep compatibility with Python 2
 
     def __iter__(self):
         return self
 
-    def next(self):
+    def __next__(self):
         self._pos += 1
         try:
             return self._getItem(self._pos)
diff --git a/Products/CMFEditions/StandardModifiers.py b/Products/CMFEditions/StandardModifiers.py
index 41b2322..06653ff 100644
--- a/Products/CMFEditions/StandardModifiers.py
+++ b/Products/CMFEditions/StandardModifiers.py
@@ -25,34 +25,37 @@
 """Standard modifiers
 """
 
-import os,sys
-from itertools import izip
-from App.class_init import InitializeClass
-from zope.copy import copy
-
 from Acquisition import aq_base
-from zope.interface import implementer, Interface
-from zope.component.interfaces import ComponentLookupError
-from zope.component.interfaces import IPossibleSite
-from ZODB.blob import Blob
+from App.class_init import InitializeClass
 from OFS.ObjectManager import ObjectManager
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 
-from Products.CMFCore.utils import getToolByName
-from Products.CMFCore.permissions import ManagePortal
 from Products.CMFCore.Expression import Expression
-
+from Products.CMFCore.permissions import ManagePortal
+from Products.CMFCore.utils import getToolByName
 from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
+from Products.CMFEditions.interfaces.IModifier import FileTooLargeToVersionError
 from Products.CMFEditions.interfaces.IModifier import IAttributeModifier
 from Products.CMFEditions.interfaces.IModifier import ICloneModifier
-from Products.CMFEditions.interfaces.IModifier import ISaveRetrieveModifier
 from Products.CMFEditions.interfaces.IModifier import IConditionalTalesModifier
 from Products.CMFEditions.interfaces.IModifier import IReferenceAdapter
-from Products.CMFEditions.interfaces.IModifier import FileTooLargeToVersionError
+from Products.CMFEditions.interfaces.IModifier import ISaveRetrieveModifier
 from Products.CMFEditions.Modifiers import ConditionalModifier
 from Products.CMFEditions.Modifiers import ConditionalTalesModifier
 
+from ZODB.blob import Blob
+from zope.copy import copy
+from zope.component.interfaces import ComponentLookupError
+from zope.component.interfaces import IPossibleSite
+from zope.interface import implementer
+from zope.interface import Interface
+
+import os
+import six
+import sys
+
+
 try:
     from Products.Archetypes.interfaces.base import IBaseContent
 except ImportError:
@@ -890,7 +893,7 @@ def getOnCloneModifiers(self, obj):
 
         def persistent_id(obj):
             obj_id = id(aq_base(obj))
-            for key, bases in component_bases.iteritems():
+            for key, bases in six.iteritems(component_bases):
                 if obj_id in bases:
                     return '%s:%s' % (key, obj_id)
             return None
@@ -1014,7 +1017,7 @@ def _getFieldValues(self, obj):
                         size = val.getSize()
                     except (TypeError,AttributeError):
                         size = None
-                    if isinstance(size, (int, long)) and size >= max_size:
+                    if isinstance(size, six.integer_types) and size >= max_size:
                         yield 'annotation', name, val
 
         # Search for fields stored via AttributeStorage
@@ -1023,7 +1026,7 @@ def _getFieldValues(self, obj):
             # Skip linked Pdata chains too long for the pickler
             if hasattr(aq_base(val), 'getSize') and callable(val.getSize):
                 size = val.getSize()
-                if isinstance(size, (int, long)) and size >= max_size:
+                if isinstance(size, six.integer_types) and size >= max_size:
                     yield 'attribute', name, val
 
     def getOnCloneModifiers(self, obj):
@@ -1190,7 +1193,7 @@ def getReferencedAttributes(self, obj):
                 if (os.fstat(prior_file.fileno()).st_size ==
                     os.fstat(blob_file.fileno()).st_size):
                     # Files are the same size, compare line by line
-                    for line, prior_line in izip(blob_file, prior_file):
+                    for line, prior_line in six.moves.zip(blob_file, prior_file):
                         if line != prior_line:
                             break
                     else:
@@ -1211,7 +1214,7 @@ def getReferencedAttributes(self, obj):
 
     def reattachReferencedAttributes(self, obj, attrs_dict):
         obj = aq_base(obj)
-        for name, blob in attrs_dict.iteritems():
+        for name, blob in six.iteritems(attrs_dict):
             obj.getField(name).get(obj).setBlob(blob)
 
     def getOnCloneModifiers(self, obj):
@@ -1267,7 +1270,7 @@ def getOnCloneModifiers(self, obj):
         if not blob_file_classes:
             return
 
-        blob_refs = set(id(v) for v in obj.__dict__.itervalues()
+        blob_refs = set(id(v) for v in six.itervalues(obj.__dict__)
                         if isinstance(v, blob_file_classes))
 
         def persistent_id(obj):
@@ -1291,7 +1294,7 @@ def afterRetrieveModifier(self, obj, repo_clone, preserve=()):
         if obj is None:
             return [], [], {}
 
-        blob_fields = ((k, v) for k, v in obj.__dict__.iteritems()
+        blob_fields = ((k, v) for k, v in six.iteritems(obj.__dict__)
                         if isinstance(v, blob_file_classes))
 
         for k, v in blob_fields:
diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index f843866..3d68373 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -25,45 +25,49 @@
 """
 __version__ = "$Revision: 1.18 $"
 
-import logging
-import time
-import types
-from StringIO import StringIO
-from cPickle import Pickler, Unpickler, dumps, loads, HIGHEST_PROTOCOL
-from zope.interface import implementer
-
+from AccessControl import ClassSecurityInfo
 from App.class_init import InitializeClass
-from BTrees.OOBTree import OOBTree
 from BTrees.IOBTree import IOBTree
-from Persistence import Persistent
-from AccessControl import ClassSecurityInfo
-
+from BTrees.OOBTree import OOBTree
 from OFS.SimpleItem import SimpleItem
-from Products.PageTemplates.PageTemplateFile import PageTemplateFile
+from Persistence import Persistent
 
-from Products.CMFCore.utils import UniqueObject, getToolByName
 from Products.CMFCore.permissions import ManagePortal
-
-from Products.ZopeVersionControl.ZopeRepository import ZopeRepository
-from Products.ZopeVersionControl.Utility import VersionControlError
-from Products.ZopeVersionControl.EventLog import LogEntry
+from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.utils import UniqueObject
 
 from Products.CMFEditions.interfaces import IStorageTool
-from Products.CMFEditions.interfaces.IStorage import IStorage
-from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
 from Products.CMFEditions.interfaces.IStorage import IHistory
-from Products.CMFEditions.interfaces.IStorage import IVersionData
+from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
+from Products.CMFEditions.interfaces.IStorage import IStorage
 from Products.CMFEditions.interfaces.IStorage import IStreamableReference
-
+from Products.CMFEditions.interfaces.IStorage import IVersionData
 from Products.CMFEditions.interfaces.IStorage import StorageError
+from Products.CMFEditions.interfaces.IStorage import StoragePurgeError
 from Products.CMFEditions.interfaces.IStorage import StorageRegisterError
-from Products.CMFEditions.interfaces.IStorage import StorageSaveError
 from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
+from Products.CMFEditions.interfaces.IStorage import StorageSaveError
 from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
-from Products.CMFEditions.interfaces.IStorage import StoragePurgeError
-
 from Products.CMFEditions.Permissions import AccessPreviousVersions
 
+from Products.PageTemplates.PageTemplateFile import PageTemplateFile
+from Products.ZopeVersionControl.EventLog import LogEntry
+from Products.ZopeVersionControl.Utility import VersionControlError
+from Products.ZopeVersionControl.ZopeRepository import ZopeRepository
+
+from six import StringIO
+from six.moves.cPickle import dumps
+from six.moves.cPickle import HIGHEST_PROTOCOL
+from six.moves.cPickle import loads
+from six.moves.cPickle import Pickler
+from six.moves.cPickle import Unpickler
+from zope.interface import implementer
+
+import logging
+import time
+import types
+
+
 logger = logging.getLogger('CMFEditions')
 
 def deepCopy(obj):
@@ -1040,11 +1044,12 @@ def __init__(self, getItem, stopExceptions):
         self._getItem = getItem
         self._stopExceptions = stopExceptions
         self._pos = -1
+        self.next = self.__next__  # In order to keep compatibility with Python 2
 
     def __iter__(self):
         return self
 
-    def next(self):
+    def __next__(self):
         self._pos += 1
         try:
             return self._getItem(self._pos)
diff --git a/Products/CMFEditions/browser/diff.py b/Products/CMFEditions/browser/diff.py
index 9bc45ee..4ef23a2 100644
--- a/Products/CMFEditions/browser/diff.py
+++ b/Products/CMFEditions/browser/diff.py
@@ -1,10 +1,12 @@
 # -*- coding: utf-8 -*-
-from zope.i18n import translate
+
 from Acquisition import aq_inner
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.CMFCore.utils import getToolByName
 from Products.CMFEditions import CMFEditionsMessageFactory as _
+from Products.Five.browser import BrowserView
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from six.moves import range
+from zope.i18n import translate
 
 
 class DiffView(BrowserView):
@@ -46,7 +48,7 @@ def __call__(self):
         getId = history_metadata.getVersionId
         history = self.history = []
         # Count backwards from most recent to least recent
-        for i in xrange(history_metadata.getLength(countPurged=False)-1, -1, -1):
+        for i in range(history_metadata.getLength(countPurged=False) - 1, -1, -1):
             version = retrieve(i, countPurged=False)['metadata'].copy()
             version['version_id'] = getId(i, countPurged=False)
             history.append(version)
diff --git a/Products/CMFEditions/skins/CMFEditions/revertversion.py b/Products/CMFEditions/skins/CMFEditions/revertversion.py
index e0878f1..b3bcea1 100644
--- a/Products/CMFEditions/skins/CMFEditions/revertversion.py
+++ b/Products/CMFEditions/skins/CMFEditions/revertversion.py
@@ -10,6 +10,9 @@
 from Products.CMFEditions import CMFEditionsMessageFactory as _
 from Products.CMFEditions.interfaces.IModifier import FileTooLargeToVersionError
 
+import six
+
+
 RESPONSE = context.REQUEST.RESPONSE
 putils = container.plone_utils
 pr = container.portal_repository
@@ -24,8 +27,8 @@
     view_url = context.absolute_url()
 
 title = context.title_or_id()
-if not isinstance(title, unicode):
-    title = unicode(title, 'utf-8', 'ignore')
+if not isinstance(title, six.text_type):
+    title = six.text_type(title, 'utf-8', 'ignore')
 
 msg = _(u'${title} has been reverted to revision ${version}.',
         mapping={'title': title,
diff --git a/Products/CMFEditions/tests/DummyTools.py b/Products/CMFEditions/tests/DummyTools.py
index ddd9ff1..6737a14 100644
--- a/Products/CMFEditions/tests/DummyTools.py
+++ b/Products/CMFEditions/tests/DummyTools.py
@@ -1,28 +1,31 @@
 # -*- coding: utf-8 -*-
-from copy import deepcopy
-from cPickle import Pickler, Unpickler
-from StringIO import StringIO
-import types
-
-from zope.interface import implementer
 
 from Acquisition import aq_base
+from copy import deepcopy
 from DateTime import DateTime
 from OFS.SimpleItem import SimpleItem
 
-from Products.CMFEditions.utilities import dereference
+from Products.CMFCore.utils import getToolByName
 from Products.CMFEditions.ArchivistTool import ObjectData
-from Products.CMFEditions.ArchivistTool import PreparedObject
 from Products.CMFEditions.ArchivistTool import ObjectManagerStorageAdapter
+from Products.CMFEditions.ArchivistTool import PreparedObject
 from Products.CMFEditions.ArchivistTool import VersionData
 from Products.CMFEditions.interfaces.IArchivist import ArchivistError
-from Products.CMFEditions.interfaces.IStorage import IStreamableReference
-from Products.CMFEditions.interfaces.IStorage import IStorage
-from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
 from Products.CMFEditions.interfaces.IPurgePolicy import IPurgePolicy
-from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
+from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
+from Products.CMFEditions.interfaces.IStorage import IStorage
 from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
-from Products.CMFCore.utils import getToolByName
+from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
+from Products.CMFEditions.interfaces.IStorage import IStreamableReference
+from Products.CMFEditions.utilities import dereference
+
+from six import StringIO
+from six.moves.cPickle import Pickler
+from six.moves.cPickle import Unpickler
+from zope.interface import implementer
+
+import types
+
 
 # Make alog module level so that it survives transaction rollbacks
 alog = []
@@ -481,7 +484,7 @@ def save(self, history_id, object, referenced_data={}, metadata=None):
             if not policy.beforeSaveHook(history_id, metadata):
                 return len(self._histories[history_id]) - 1
 
-        if not self._histories.has_key(history_id):
+        if not history_id in self._histories:
             raise StorageUnregisteredError(
                 "Saving or retrieving an unregistered object is not "
                 "possible. Register the object with history id '%s' first. "
diff --git a/Products/CMFEditions/tests/large_file_modifiers.txt b/Products/CMFEditions/tests/large_file_modifiers.txt
index c36073b..f684504 100644
--- a/Products/CMFEditions/tests/large_file_modifiers.txt
+++ b/Products/CMFEditions/tests/large_file_modifiers.txt
@@ -31,7 +31,7 @@ expected values::
     1000
     >>> modifier.field_names
     ('my_file', 'my_image')
-    >>> print modifier.getFieldNames()
+    >>> print(modifier.getFieldNames())
     my_file
     my_image
     >>> modifier.getModifier() is modifier
diff --git a/Products/CMFEditions/tests/test_ATContentTypes.py b/Products/CMFEditions/tests/test_ATContentTypes.py
index 6d5ecd6..edd0fff 100644
--- a/Products/CMFEditions/tests/test_ATContentTypes.py
+++ b/Products/CMFEditions/tests/test_ATContentTypes.py
@@ -224,7 +224,7 @@ def testBlobsNotStringConverted(self):
         for method in ('retrieve', 'isUpToDate', 'save'):
             try:
                 getattr(archivist, method)(prepared)
-            except IArchivist.ArchivistError, err:
+            except IArchivist.ArchivistError as err:
                 self.assertFalse(file1 in str(err))
                 self.assertFalse(file1 in repr(err))
             else:
diff --git a/Products/CMFEditions/tests/webdav_history.txt b/Products/CMFEditions/tests/webdav_history.txt
index 135d354..3195894 100644
--- a/Products/CMFEditions/tests/webdav_history.txt
+++ b/Products/CMFEditions/tests/webdav_history.txt
@@ -40,7 +40,7 @@ new object via the Plone UI:
   >>> 'some-document' in folder.objectIds()
   True
 
-  >>> print str(folder['some-document']['text'])
+  >>> print(str(folder['some-document']['text']))
   Some Content
 
 
@@ -63,7 +63,7 @@ another version of the object to be saved:
   HTTP/1.1 204 No Content
   ...
 
-  >>> print str(folder['some-document']['text'])
+  >>> print(str(folder['some-document']['text']))
   Some Other Content
 
   >>> len(portal_repo.getHistory(folder['some-document']))
diff --git a/Products/CMFEditions/utilities.py b/Products/CMFEditions/utilities.py
index 9c4b4b5..cf48b1d 100644
--- a/Products/CMFEditions/utilities.py
+++ b/Products/CMFEditions/utilities.py
@@ -68,7 +68,7 @@ def dereference(obj=None, history_id=None, zodb_hook=None):
 
     if history_id is None:
         if obj is None:
-            raise TypeError, "This method requires either an obj or a history_id"
+            raise TypeError("This method requires either an obj or a history_id")
         else:
             history_id = portal_uidhandler.queryUid(obj, None)
     elif obj is None:
diff --git a/bootstrap.py b/bootstrap.py
index 1980d6c..5254298 100644
--- a/bootstrap.py
+++ b/bootstrap.py
@@ -18,8 +18,14 @@
 use the -c option to specify an alternate configuration file.
 """
 
-import os, shutil, sys, tempfile, urllib2
 from optparse import OptionParser
+from six.moves import reload_module
+
+import os
+import shutil
+from six.moves import urllib
+import sys
+import tempfile
 
 tmpeggs = tempfile.mkdtemp()
 
@@ -28,14 +34,14 @@
 # parsing arguments
 parser = OptionParser()
 parser.add_option("-v", "--version", dest="version",
-                          help="use a specific zc.buildout version")
+                  help="use a specific zc.buildout version")
 parser.add_option("-d", "--distribute",
-                   action="store_true", dest="distribute", default=False,
-                   help="Use Disribute rather than Setuptools.")
+                  action="store_true", dest="distribute", default=False,
+                  help="Use Disribute rather than Setuptools.")
 
 parser.add_option("-c", None, action="store", dest="config_file",
-                   help=("Specify the path to the buildout configuration "
-                         "file to be used."))
+                  help=("Specify the path to the buildout configuration "
+                        "file to be used."))
 
 options, args = parser.parse_args()
 
@@ -62,31 +68,31 @@
 except ImportError:
     ez = {}
     if USE_DISTRIBUTE:
-        exec urllib2.urlopen('http://python-distribute.org/distribute_setup.py'
-                         ).read() in ez
+        exec urllib.request.urlopen('http://python-distribute.org/distribute_setup.py'
+                             ).read() in ez
         ez['use_setuptools'](to_dir=tmpeggs, download_delay=0, no_fake=True)
     else:
-        exec urllib2.urlopen('http://peak.telecommunity.com/dist/ez_setup.py'
+        exec urllib.request.urlopen('http://peak.telecommunity.com/dist/ez_setup.py'
                              ).read() in ez
         ez['use_setuptools'](to_dir=tmpeggs, download_delay=0)
 
     if to_reload:
-        reload(pkg_resources)
+        reload_module(pkg_resources)
     else:
         import pkg_resources
 
 if sys.platform == 'win32':
     def quote(c):
         if ' ' in c:
-            return '"%s"' % c # work around spawn lamosity on windows
+            return '"%s"' % c  # work around spawn lamosity on windows
         else:
             return c
 else:
-    def quote (c):
+    def quote(c):
         return c
 
 cmd = 'from setuptools.command.easy_install import main; main()'
-ws  = pkg_resources.working_set
+ws = pkg_resources.working_set
 
 if USE_DISTRIBUTE:
     requirement = 'distribute'
@@ -96,23 +102,27 @@ def quote (c):
 if is_jython:
     import subprocess
 
-    assert subprocess.Popen([sys.executable] + ['-c', quote(cmd), '-mqNxd',
-           quote(tmpeggs), 'zc.buildout' + VERSION],
-           env=dict(os.environ,
-               PYTHONPATH=
-               ws.find(pkg_resources.Requirement.parse(requirement)).location
-               ),
-           ).wait() == 0
+    assert subprocess.Popen([sys.executable] +
+                            ['-c',
+                             quote(cmd),
+                             '-mqNxd',
+                             quote(tmpeggs),
+                             'zc.buildout' + VERSION],
+                            env=dict(os.environ,
+                                     PYTHONPATH=ws.find(pkg_resources.Requirement.parse(
+                                         requirement)).location
+                                     ),
+                            ).wait() == 0
 
 else:
     assert os.spawnle(
-        os.P_WAIT, sys.executable, quote (sys.executable),
-        '-c', quote (cmd), '-mqNxd', quote (tmpeggs), 'zc.buildout' + VERSION,
+        os.P_WAIT, sys.executable, quote(sys.executable),
+        '-c', quote(cmd), '-mqNxd', quote(tmpeggs), 'zc.buildout' + VERSION,
         dict(os.environ,
-            PYTHONPATH=
-            ws.find(pkg_resources.Requirement.parse(requirement)).location
-            ),
-        ) == 0
+             PYTHONPATH=ws.find(
+                 pkg_resources.Requirement.parse(requirement)).location
+             ),
+    ) == 0
 
 ws.add_entry(tmpeggs)
 ws.require('zc.buildout' + VERSION)
diff --git a/setup.py b/setup.py
index bbe2bb3..732b7c2 100644
--- a/setup.py
+++ b/setup.py
@@ -38,6 +38,7 @@
     ),
     install_requires=[
         'setuptools',
+        'six',
         'zope.copy',
         'zope.dottedname',
         'zope.i18nmessageid',


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2018-01-30T14:18:25+01:00
Author: Davi Lima (davilima6) <davilima6@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/1a89f4c6b6b930110efe0a3c228660707fb05d01

Do not include buildout.cfg and bootstrap.py

Files changed:
D bootstrap.py
D buildout.cfg

diff --git a/bootstrap.py b/bootstrap.py
deleted file mode 100644
index 5254298..0000000
--- a/bootstrap.py
+++ /dev/null
@@ -1,131 +0,0 @@
-##############################################################################
-#
-# Copyright (c) 2006 Zope Corporation and Contributors.
-# All Rights Reserved.
-#
-# This software is subject to the provisions of the Zope Public License,
-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
-# FOR A PARTICULAR PURPOSE.
-#
-##############################################################################
-"""Bootstrap a buildout-based project
-
-Simply run this script in a directory containing a buildout.cfg.
-The script accepts buildout command-line options, so you can
-use the -c option to specify an alternate configuration file.
-"""
-
-from optparse import OptionParser
-from six.moves import reload_module
-
-import os
-import shutil
-from six.moves import urllib
-import sys
-import tempfile
-
-tmpeggs = tempfile.mkdtemp()
-
-is_jython = sys.platform.startswith('java')
-
-# parsing arguments
-parser = OptionParser()
-parser.add_option("-v", "--version", dest="version",
-                  help="use a specific zc.buildout version")
-parser.add_option("-d", "--distribute",
-                  action="store_true", dest="distribute", default=False,
-                  help="Use Disribute rather than Setuptools.")
-
-parser.add_option("-c", None, action="store", dest="config_file",
-                  help=("Specify the path to the buildout configuration "
-                        "file to be used."))
-
-options, args = parser.parse_args()
-
-# if -c was provided, we push it back into args for buildout' main function
-if options.config_file is not None:
-    args += ['-c', options.config_file]
-
-if options.version is not None:
-    VERSION = '==%s' % options.version
-else:
-    VERSION = ''
-
-# We decided to always use distribute, make sure this is the default for us
-# USE_DISTRIBUTE = options.distribute
-USE_DISTRIBUTE = True
-args = args + ['bootstrap']
-
-to_reload = False
-try:
-    import pkg_resources
-    if not hasattr(pkg_resources, '_distribute'):
-        to_reload = True
-        raise ImportError
-except ImportError:
-    ez = {}
-    if USE_DISTRIBUTE:
-        exec urllib.request.urlopen('http://python-distribute.org/distribute_setup.py'
-                             ).read() in ez
-        ez['use_setuptools'](to_dir=tmpeggs, download_delay=0, no_fake=True)
-    else:
-        exec urllib.request.urlopen('http://peak.telecommunity.com/dist/ez_setup.py'
-                             ).read() in ez
-        ez['use_setuptools'](to_dir=tmpeggs, download_delay=0)
-
-    if to_reload:
-        reload_module(pkg_resources)
-    else:
-        import pkg_resources
-
-if sys.platform == 'win32':
-    def quote(c):
-        if ' ' in c:
-            return '"%s"' % c  # work around spawn lamosity on windows
-        else:
-            return c
-else:
-    def quote(c):
-        return c
-
-cmd = 'from setuptools.command.easy_install import main; main()'
-ws = pkg_resources.working_set
-
-if USE_DISTRIBUTE:
-    requirement = 'distribute'
-else:
-    requirement = 'setuptools'
-
-if is_jython:
-    import subprocess
-
-    assert subprocess.Popen([sys.executable] +
-                            ['-c',
-                             quote(cmd),
-                             '-mqNxd',
-                             quote(tmpeggs),
-                             'zc.buildout' + VERSION],
-                            env=dict(os.environ,
-                                     PYTHONPATH=ws.find(pkg_resources.Requirement.parse(
-                                         requirement)).location
-                                     ),
-                            ).wait() == 0
-
-else:
-    assert os.spawnle(
-        os.P_WAIT, sys.executable, quote(sys.executable),
-        '-c', quote(cmd), '-mqNxd', quote(tmpeggs), 'zc.buildout' + VERSION,
-        dict(os.environ,
-             PYTHONPATH=ws.find(
-                 pkg_resources.Requirement.parse(requirement)).location
-             ),
-    ) == 0
-
-ws.add_entry(tmpeggs)
-ws.require('zc.buildout' + VERSION)
-import zc.buildout.buildout
-zc.buildout.buildout.main(args)
-shutil.rmtree(tmpeggs)
diff --git a/buildout.cfg b/buildout.cfg
deleted file mode 100644
index 36e9fc6..0000000
--- a/buildout.cfg
+++ /dev/null
@@ -1,16 +0,0 @@
-[buildout]
-extends = http://dist.plone.org/release/4.1b1/versions.cfg
-develop = .
-parts =
-    test
-
-unzip = true
-versions = versions
-
-[versions]
-Products.CMFEditions = 2.1.2
-
-[test]
-recipe = zc.recipe.testrunner
-eggs = Products.CMFEditions
-       Products.CMFEditions [test]


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2018-01-30T18:09:36+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFEditions/commit/a2855e72272feb58075533923d3190819580080f

Merge pull request #47 from plone/python3

Add Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M Products/CMFEditions/ArchivistTool.py
M Products/CMFEditions/CopyModifyMergeRepositoryTool.py
M Products/CMFEditions/StandardModifiers.py
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/browser/diff.py
M Products/CMFEditions/skins/CMFEditions/revertversion.py
M Products/CMFEditions/tests/DummyTools.py
M Products/CMFEditions/tests/large_file_modifiers.txt
M Products/CMFEditions/tests/test_ATContentTypes.py
M Products/CMFEditions/tests/webdav_history.txt
M Products/CMFEditions/utilities.py
M setup.py
D bootstrap.py
D buildout.cfg

diff --git a/CHANGES.rst b/CHANGES.rst
index 3d91042..b885838 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Prepare for Python 2 / 3 compatibility
+  [davilima6]
 
 Bug fixes:
 
diff --git a/Products/CMFEditions/ArchivistTool.py b/Products/CMFEditions/ArchivistTool.py
index 06af845..fa16050 100644
--- a/Products/CMFEditions/ArchivistTool.py
+++ b/Products/CMFEditions/ArchivistTool.py
@@ -24,39 +24,44 @@
 $Id: ArchivistTool.py,v 1.15 2005/06/24 11:34:08 gregweb Exp $
 """
 
-import time
-from StringIO import StringIO
-from cPickle import Pickler, Unpickler
-from zope.interface import implementer, alsoProvides
-
+from AccessControl import ClassSecurityInfo
+from AccessControl import getSecurityManager
+from Acquisition import aq_base
+from Acquisition import aq_inner
+from Acquisition import aq_parent
 from App.class_init import InitializeClass
-from Persistence import Persistent
-from Acquisition import aq_base, aq_parent, aq_inner
-from AccessControl import ClassSecurityInfo, getSecurityManager
 from OFS.SimpleItem import SimpleItem
+from Persistence import Persistent
 
-from Products.CMFCore.utils import UniqueObject, getToolByName
-
-from Products.CMFEditions.utilities import KwAsAttributes
-from Products.CMFEditions.utilities import dereference
-from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
-from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
-
+from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.utils import UniqueObject
 from Products.CMFEditions.interfaces import IArchivistTool
+from Products.CMFEditions.interfaces import IVersioned
+from Products.CMFEditions.interfaces.IArchivist import ArchivistError
+from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
+from Products.CMFEditions.interfaces.IArchivist import ArchivistSaveError
+from Products.CMFEditions.interfaces.IArchivist import ArchivistUnregisteredError
 from Products.CMFEditions.interfaces.IArchivist import IArchivist
-from Products.CMFEditions.interfaces.IArchivist import IPurgeSupport
+from Products.CMFEditions.interfaces.IArchivist import IAttributeAdapter
 from Products.CMFEditions.interfaces.IArchivist import IHistory
-from Products.CMFEditions.interfaces.IArchivist import IVersionData
+from Products.CMFEditions.interfaces.IArchivist import IObjectData
 from Products.CMFEditions.interfaces.IArchivist import IPreparedObject
-from Products.CMFEditions.interfaces.IArchivist import IAttributeAdapter
+from Products.CMFEditions.interfaces.IArchivist import IPurgeSupport
 from Products.CMFEditions.interfaces.IArchivist import IVersionAwareReference
-from Products.CMFEditions.interfaces.IArchivist import IObjectData
+from Products.CMFEditions.interfaces.IArchivist import IVersionData
+from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
+from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
+from Products.CMFEditions.utilities import dereference
+from Products.CMFEditions.utilities import KwAsAttributes
+
+from six import StringIO
+from six.moves.cPickle import Pickler
+from six.moves.cPickle import Unpickler
+from zope.interface import alsoProvides
+from zope.interface import implementer
+
+import time
 
-from Products.CMFEditions.interfaces.IArchivist import ArchivistError
-from Products.CMFEditions.interfaces.IArchivist import ArchivistSaveError
-from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
-from Products.CMFEditions.interfaces.IArchivist import ArchivistUnregisteredError
-from Products.CMFEditions.interfaces import IVersioned
 
 RETRIEVING_UNREGISTERED_FAILED = \
     "Retrieving a version of an unregistered object is not possible. " \
@@ -531,11 +536,12 @@ def __init__(self, getItem, stopExceptions):
         self._getItem = getItem
         self._stopExceptions = stopExceptions
         self._pos = -1
+        self.next = self.__next__  # In order to keep compatibility with Python 2
 
     def __iter__(self):
         return self
 
-    def next(self):
+    def __next__(self):
         self._pos += 1
         try:
             return self._getItem(self._pos)
diff --git a/Products/CMFEditions/CopyModifyMergeRepositoryTool.py b/Products/CMFEditions/CopyModifyMergeRepositoryTool.py
index 02f0787..bad72b1 100644
--- a/Products/CMFEditions/CopyModifyMergeRepositoryTool.py
+++ b/Products/CMFEditions/CopyModifyMergeRepositoryTool.py
@@ -25,42 +25,49 @@
 $Id: CopyModifyMergeRepositoryTool.py,v 1.20 2005/06/24 11:42:01 gregweb Exp $
 """
 
-import time
-import transaction
-
-from App.class_init import InitializeClass
-from Acquisition import aq_base, aq_parent, aq_inner
+from AccessControl import ClassSecurityInfo
+from AccessControl import Unauthorized
+from Acquisition import aq_base
+from Acquisition import aq_parent
+from Acquisition import aq_inner
 from Acquisition import ImplicitAcquisitionWrapper
-from AccessControl import ClassSecurityInfo, Unauthorized
-from OFS.SimpleItem import SimpleItem
+from App.class_init import InitializeClass
 from BTrees.OOBTree import OOBTree
-from zope.event import notify
-from zope.interface import implementer, Interface
-from zope.lifecycleevent import ObjectModifiedEvent
-from Products.CMFCore.utils import UniqueObject, getToolByName
+from OFS.SimpleItem import SimpleItem
 from Products.CMFCore.utils import _checkPermission
+from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.utils import UniqueObject
 
-from Products.CMFEditions.utilities import dereference, wrap
 from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
-
+from Products.CMFEditions.interfaces.IModifier import ModifierException
+from Products.CMFEditions.interfaces.IRepository import IContentTypeVersionPolicySupport
 from Products.CMFEditions.interfaces.IRepository import ICopyModifyMergeRepository
+from Products.CMFEditions.interfaces.IRepository import IHistory
 from Products.CMFEditions.interfaces.IRepository import IPurgeSupport
-from Products.CMFEditions.interfaces.IRepository import RepositoryPurgeError
-from Products.CMFEditions.interfaces.IRepository import IContentTypeVersionPolicySupport
 from Products.CMFEditions.interfaces.IRepository import IRepositoryTool
 from Products.CMFEditions.interfaces.IRepository import IVersionData
-from Products.CMFEditions.interfaces.IRepository import IHistory
-
-from Products.CMFEditions.interfaces.IModifier import ModifierException
+from Products.CMFEditions.interfaces.IRepository import RepositoryPurgeError
 
+from Products.CMFEditions.Permissions import AccessPreviousVersions
 from Products.CMFEditions.Permissions import ApplyVersionControl
-from Products.CMFEditions.Permissions import SaveNewVersion
+from Products.CMFEditions.Permissions import ManageVersioningPolicies
 from Products.CMFEditions.Permissions import PurgeVersion
-from Products.CMFEditions.Permissions import AccessPreviousVersions
 from Products.CMFEditions.Permissions import RevertToPreviousVersions
-from Products.CMFEditions.Permissions import ManageVersioningPolicies
-from Products.CMFEditions.VersionPolicies import VersionPolicy
+from Products.CMFEditions.Permissions import SaveNewVersion
+from Products.CMFEditions.utilities import dereference
 from Products.CMFEditions.utilities import STUB_OBJECT_PREFIX
+from Products.CMFEditions.utilities import wrap
+from Products.CMFEditions.VersionPolicies import VersionPolicy
+
+from zope.event import notify
+from zope.interface import implementer
+from zope.interface import Interface
+from zope.lifecycleevent import ObjectModifiedEvent
+
+import six
+import time
+import transaction
+
 
 try:
     from Products.Archetypes.event import ObjectEditedEvent
@@ -230,9 +237,9 @@ def manage_changePolicyDefs(self, policy_list, **kwargs):
                 "List items must be tuples: %s" % str(item)
             assert len(item) in (2, 3, 4), \
                 "Each policy definition must contain a title and id: %s" % str(item)
-            assert isinstance(item[0], basestring), \
+            assert isinstance(item[0], six.string_types), \
                 "Policy id must be a string: %s" % str(item[0])
-            assert isinstance(item[1], basestring), \
+            assert isinstance(item[1], six.string_types), \
                 "Policy title must be a string: %s" % str(item[1])
             # Get optional Policy class and kwargs.
             if len(item) >= 3:
@@ -812,11 +819,12 @@ def __init__(self, getItem, stopExceptions):
         self._getItem = getItem
         self._stopExceptions = stopExceptions
         self._pos = -1
+        self.next = self.__next__  # In order to keep compatibility with Python 2
 
     def __iter__(self):
         return self
 
-    def next(self):
+    def __next__(self):
         self._pos += 1
         try:
             return self._getItem(self._pos)
diff --git a/Products/CMFEditions/StandardModifiers.py b/Products/CMFEditions/StandardModifiers.py
index 41b2322..06653ff 100644
--- a/Products/CMFEditions/StandardModifiers.py
+++ b/Products/CMFEditions/StandardModifiers.py
@@ -25,34 +25,37 @@
 """Standard modifiers
 """
 
-import os,sys
-from itertools import izip
-from App.class_init import InitializeClass
-from zope.copy import copy
-
 from Acquisition import aq_base
-from zope.interface import implementer, Interface
-from zope.component.interfaces import ComponentLookupError
-from zope.component.interfaces import IPossibleSite
-from ZODB.blob import Blob
+from App.class_init import InitializeClass
 from OFS.ObjectManager import ObjectManager
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2Base
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 
-from Products.CMFCore.utils import getToolByName
-from Products.CMFCore.permissions import ManagePortal
 from Products.CMFCore.Expression import Expression
-
+from Products.CMFCore.permissions import ManagePortal
+from Products.CMFCore.utils import getToolByName
 from Products.CMFEditions.interfaces.IArchivist import ArchivistRetrieveError
+from Products.CMFEditions.interfaces.IModifier import FileTooLargeToVersionError
 from Products.CMFEditions.interfaces.IModifier import IAttributeModifier
 from Products.CMFEditions.interfaces.IModifier import ICloneModifier
-from Products.CMFEditions.interfaces.IModifier import ISaveRetrieveModifier
 from Products.CMFEditions.interfaces.IModifier import IConditionalTalesModifier
 from Products.CMFEditions.interfaces.IModifier import IReferenceAdapter
-from Products.CMFEditions.interfaces.IModifier import FileTooLargeToVersionError
+from Products.CMFEditions.interfaces.IModifier import ISaveRetrieveModifier
 from Products.CMFEditions.Modifiers import ConditionalModifier
 from Products.CMFEditions.Modifiers import ConditionalTalesModifier
 
+from ZODB.blob import Blob
+from zope.copy import copy
+from zope.component.interfaces import ComponentLookupError
+from zope.component.interfaces import IPossibleSite
+from zope.interface import implementer
+from zope.interface import Interface
+
+import os
+import six
+import sys
+
+
 try:
     from Products.Archetypes.interfaces.base import IBaseContent
 except ImportError:
@@ -890,7 +893,7 @@ def getOnCloneModifiers(self, obj):
 
         def persistent_id(obj):
             obj_id = id(aq_base(obj))
-            for key, bases in component_bases.iteritems():
+            for key, bases in six.iteritems(component_bases):
                 if obj_id in bases:
                     return '%s:%s' % (key, obj_id)
             return None
@@ -1014,7 +1017,7 @@ def _getFieldValues(self, obj):
                         size = val.getSize()
                     except (TypeError,AttributeError):
                         size = None
-                    if isinstance(size, (int, long)) and size >= max_size:
+                    if isinstance(size, six.integer_types) and size >= max_size:
                         yield 'annotation', name, val
 
         # Search for fields stored via AttributeStorage
@@ -1023,7 +1026,7 @@ def _getFieldValues(self, obj):
             # Skip linked Pdata chains too long for the pickler
             if hasattr(aq_base(val), 'getSize') and callable(val.getSize):
                 size = val.getSize()
-                if isinstance(size, (int, long)) and size >= max_size:
+                if isinstance(size, six.integer_types) and size >= max_size:
                     yield 'attribute', name, val
 
     def getOnCloneModifiers(self, obj):
@@ -1190,7 +1193,7 @@ def getReferencedAttributes(self, obj):
                 if (os.fstat(prior_file.fileno()).st_size ==
                     os.fstat(blob_file.fileno()).st_size):
                     # Files are the same size, compare line by line
-                    for line, prior_line in izip(blob_file, prior_file):
+                    for line, prior_line in six.moves.zip(blob_file, prior_file):
                         if line != prior_line:
                             break
                     else:
@@ -1211,7 +1214,7 @@ def getReferencedAttributes(self, obj):
 
     def reattachReferencedAttributes(self, obj, attrs_dict):
         obj = aq_base(obj)
-        for name, blob in attrs_dict.iteritems():
+        for name, blob in six.iteritems(attrs_dict):
             obj.getField(name).get(obj).setBlob(blob)
 
     def getOnCloneModifiers(self, obj):
@@ -1267,7 +1270,7 @@ def getOnCloneModifiers(self, obj):
         if not blob_file_classes:
             return
 
-        blob_refs = set(id(v) for v in obj.__dict__.itervalues()
+        blob_refs = set(id(v) for v in six.itervalues(obj.__dict__)
                         if isinstance(v, blob_file_classes))
 
         def persistent_id(obj):
@@ -1291,7 +1294,7 @@ def afterRetrieveModifier(self, obj, repo_clone, preserve=()):
         if obj is None:
             return [], [], {}
 
-        blob_fields = ((k, v) for k, v in obj.__dict__.iteritems()
+        blob_fields = ((k, v) for k, v in six.iteritems(obj.__dict__)
                         if isinstance(v, blob_file_classes))
 
         for k, v in blob_fields:
diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index f843866..3d68373 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -25,45 +25,49 @@
 """
 __version__ = "$Revision: 1.18 $"
 
-import logging
-import time
-import types
-from StringIO import StringIO
-from cPickle import Pickler, Unpickler, dumps, loads, HIGHEST_PROTOCOL
-from zope.interface import implementer
-
+from AccessControl import ClassSecurityInfo
 from App.class_init import InitializeClass
-from BTrees.OOBTree import OOBTree
 from BTrees.IOBTree import IOBTree
-from Persistence import Persistent
-from AccessControl import ClassSecurityInfo
-
+from BTrees.OOBTree import OOBTree
 from OFS.SimpleItem import SimpleItem
-from Products.PageTemplates.PageTemplateFile import PageTemplateFile
+from Persistence import Persistent
 
-from Products.CMFCore.utils import UniqueObject, getToolByName
 from Products.CMFCore.permissions import ManagePortal
-
-from Products.ZopeVersionControl.ZopeRepository import ZopeRepository
-from Products.ZopeVersionControl.Utility import VersionControlError
-from Products.ZopeVersionControl.EventLog import LogEntry
+from Products.CMFCore.utils import getToolByName
+from Products.CMFCore.utils import UniqueObject
 
 from Products.CMFEditions.interfaces import IStorageTool
-from Products.CMFEditions.interfaces.IStorage import IStorage
-from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
 from Products.CMFEditions.interfaces.IStorage import IHistory
-from Products.CMFEditions.interfaces.IStorage import IVersionData
+from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
+from Products.CMFEditions.interfaces.IStorage import IStorage
 from Products.CMFEditions.interfaces.IStorage import IStreamableReference
-
+from Products.CMFEditions.interfaces.IStorage import IVersionData
 from Products.CMFEditions.interfaces.IStorage import StorageError
+from Products.CMFEditions.interfaces.IStorage import StoragePurgeError
 from Products.CMFEditions.interfaces.IStorage import StorageRegisterError
-from Products.CMFEditions.interfaces.IStorage import StorageSaveError
 from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
+from Products.CMFEditions.interfaces.IStorage import StorageSaveError
 from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
-from Products.CMFEditions.interfaces.IStorage import StoragePurgeError
-
 from Products.CMFEditions.Permissions import AccessPreviousVersions
 
+from Products.PageTemplates.PageTemplateFile import PageTemplateFile
+from Products.ZopeVersionControl.EventLog import LogEntry
+from Products.ZopeVersionControl.Utility import VersionControlError
+from Products.ZopeVersionControl.ZopeRepository import ZopeRepository
+
+from six import StringIO
+from six.moves.cPickle import dumps
+from six.moves.cPickle import HIGHEST_PROTOCOL
+from six.moves.cPickle import loads
+from six.moves.cPickle import Pickler
+from six.moves.cPickle import Unpickler
+from zope.interface import implementer
+
+import logging
+import time
+import types
+
+
 logger = logging.getLogger('CMFEditions')
 
 def deepCopy(obj):
@@ -1040,11 +1044,12 @@ def __init__(self, getItem, stopExceptions):
         self._getItem = getItem
         self._stopExceptions = stopExceptions
         self._pos = -1
+        self.next = self.__next__  # In order to keep compatibility with Python 2
 
     def __iter__(self):
         return self
 
-    def next(self):
+    def __next__(self):
         self._pos += 1
         try:
             return self._getItem(self._pos)
diff --git a/Products/CMFEditions/browser/diff.py b/Products/CMFEditions/browser/diff.py
index 9bc45ee..4ef23a2 100644
--- a/Products/CMFEditions/browser/diff.py
+++ b/Products/CMFEditions/browser/diff.py
@@ -1,10 +1,12 @@
 # -*- coding: utf-8 -*-
-from zope.i18n import translate
+
 from Acquisition import aq_inner
-from Products.Five.browser import BrowserView
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
 from Products.CMFCore.utils import getToolByName
 from Products.CMFEditions import CMFEditionsMessageFactory as _
+from Products.Five.browser import BrowserView
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from six.moves import range
+from zope.i18n import translate
 
 
 class DiffView(BrowserView):
@@ -46,7 +48,7 @@ def __call__(self):
         getId = history_metadata.getVersionId
         history = self.history = []
         # Count backwards from most recent to least recent
-        for i in xrange(history_metadata.getLength(countPurged=False)-1, -1, -1):
+        for i in range(history_metadata.getLength(countPurged=False) - 1, -1, -1):
             version = retrieve(i, countPurged=False)['metadata'].copy()
             version['version_id'] = getId(i, countPurged=False)
             history.append(version)
diff --git a/Products/CMFEditions/skins/CMFEditions/revertversion.py b/Products/CMFEditions/skins/CMFEditions/revertversion.py
index e0878f1..b3bcea1 100644
--- a/Products/CMFEditions/skins/CMFEditions/revertversion.py
+++ b/Products/CMFEditions/skins/CMFEditions/revertversion.py
@@ -10,6 +10,9 @@
 from Products.CMFEditions import CMFEditionsMessageFactory as _
 from Products.CMFEditions.interfaces.IModifier import FileTooLargeToVersionError
 
+import six
+
+
 RESPONSE = context.REQUEST.RESPONSE
 putils = container.plone_utils
 pr = container.portal_repository
@@ -24,8 +27,8 @@
     view_url = context.absolute_url()
 
 title = context.title_or_id()
-if not isinstance(title, unicode):
-    title = unicode(title, 'utf-8', 'ignore')
+if not isinstance(title, six.text_type):
+    title = six.text_type(title, 'utf-8', 'ignore')
 
 msg = _(u'${title} has been reverted to revision ${version}.',
         mapping={'title': title,
diff --git a/Products/CMFEditions/tests/DummyTools.py b/Products/CMFEditions/tests/DummyTools.py
index ddd9ff1..6737a14 100644
--- a/Products/CMFEditions/tests/DummyTools.py
+++ b/Products/CMFEditions/tests/DummyTools.py
@@ -1,28 +1,31 @@
 # -*- coding: utf-8 -*-
-from copy import deepcopy
-from cPickle import Pickler, Unpickler
-from StringIO import StringIO
-import types
-
-from zope.interface import implementer
 
 from Acquisition import aq_base
+from copy import deepcopy
 from DateTime import DateTime
 from OFS.SimpleItem import SimpleItem
 
-from Products.CMFEditions.utilities import dereference
+from Products.CMFCore.utils import getToolByName
 from Products.CMFEditions.ArchivistTool import ObjectData
-from Products.CMFEditions.ArchivistTool import PreparedObject
 from Products.CMFEditions.ArchivistTool import ObjectManagerStorageAdapter
+from Products.CMFEditions.ArchivistTool import PreparedObject
 from Products.CMFEditions.ArchivistTool import VersionData
 from Products.CMFEditions.interfaces.IArchivist import ArchivistError
-from Products.CMFEditions.interfaces.IStorage import IStreamableReference
-from Products.CMFEditions.interfaces.IStorage import IStorage
-from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
 from Products.CMFEditions.interfaces.IPurgePolicy import IPurgePolicy
-from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
+from Products.CMFEditions.interfaces.IStorage import IPurgeSupport
+from Products.CMFEditions.interfaces.IStorage import IStorage
 from Products.CMFEditions.interfaces.IStorage import StorageRetrieveError
-from Products.CMFCore.utils import getToolByName
+from Products.CMFEditions.interfaces.IStorage import StorageUnregisteredError
+from Products.CMFEditions.interfaces.IStorage import IStreamableReference
+from Products.CMFEditions.utilities import dereference
+
+from six import StringIO
+from six.moves.cPickle import Pickler
+from six.moves.cPickle import Unpickler
+from zope.interface import implementer
+
+import types
+
 
 # Make alog module level so that it survives transaction rollbacks
 alog = []
@@ -481,7 +484,7 @@ def save(self, history_id, object, referenced_data={}, metadata=None):
             if not policy.beforeSaveHook(history_id, metadata):
                 return len(self._histories[history_id]) - 1
 
-        if not self._histories.has_key(history_id):
+        if not history_id in self._histories:
             raise StorageUnregisteredError(
                 "Saving or retrieving an unregistered object is not "
                 "possible. Register the object with history id '%s' first. "
diff --git a/Products/CMFEditions/tests/large_file_modifiers.txt b/Products/CMFEditions/tests/large_file_modifiers.txt
index c36073b..f684504 100644
--- a/Products/CMFEditions/tests/large_file_modifiers.txt
+++ b/Products/CMFEditions/tests/large_file_modifiers.txt
@@ -31,7 +31,7 @@ expected values::
     1000
     >>> modifier.field_names
     ('my_file', 'my_image')
-    >>> print modifier.getFieldNames()
+    >>> print(modifier.getFieldNames())
     my_file
     my_image
     >>> modifier.getModifier() is modifier
diff --git a/Products/CMFEditions/tests/test_ATContentTypes.py b/Products/CMFEditions/tests/test_ATContentTypes.py
index 6d5ecd6..edd0fff 100644
--- a/Products/CMFEditions/tests/test_ATContentTypes.py
+++ b/Products/CMFEditions/tests/test_ATContentTypes.py
@@ -224,7 +224,7 @@ def testBlobsNotStringConverted(self):
         for method in ('retrieve', 'isUpToDate', 'save'):
             try:
                 getattr(archivist, method)(prepared)
-            except IArchivist.ArchivistError, err:
+            except IArchivist.ArchivistError as err:
                 self.assertFalse(file1 in str(err))
                 self.assertFalse(file1 in repr(err))
             else:
diff --git a/Products/CMFEditions/tests/webdav_history.txt b/Products/CMFEditions/tests/webdav_history.txt
index 135d354..3195894 100644
--- a/Products/CMFEditions/tests/webdav_history.txt
+++ b/Products/CMFEditions/tests/webdav_history.txt
@@ -40,7 +40,7 @@ new object via the Plone UI:
   >>> 'some-document' in folder.objectIds()
   True
 
-  >>> print str(folder['some-document']['text'])
+  >>> print(str(folder['some-document']['text']))
   Some Content
 
 
@@ -63,7 +63,7 @@ another version of the object to be saved:
   HTTP/1.1 204 No Content
   ...
 
-  >>> print str(folder['some-document']['text'])
+  >>> print(str(folder['some-document']['text']))
   Some Other Content
 
   >>> len(portal_repo.getHistory(folder['some-document']))
diff --git a/Products/CMFEditions/utilities.py b/Products/CMFEditions/utilities.py
index 9c4b4b5..cf48b1d 100644
--- a/Products/CMFEditions/utilities.py
+++ b/Products/CMFEditions/utilities.py
@@ -68,7 +68,7 @@ def dereference(obj=None, history_id=None, zodb_hook=None):
 
     if history_id is None:
         if obj is None:
-            raise TypeError, "This method requires either an obj or a history_id"
+            raise TypeError("This method requires either an obj or a history_id")
         else:
             history_id = portal_uidhandler.queryUid(obj, None)
     elif obj is None:
diff --git a/bootstrap.py b/bootstrap.py
deleted file mode 100644
index 1980d6c..0000000
--- a/bootstrap.py
+++ /dev/null
@@ -1,121 +0,0 @@
-##############################################################################
-#
-# Copyright (c) 2006 Zope Corporation and Contributors.
-# All Rights Reserved.
-#
-# This software is subject to the provisions of the Zope Public License,
-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
-# FOR A PARTICULAR PURPOSE.
-#
-##############################################################################
-"""Bootstrap a buildout-based project
-
-Simply run this script in a directory containing a buildout.cfg.
-The script accepts buildout command-line options, so you can
-use the -c option to specify an alternate configuration file.
-"""
-
-import os, shutil, sys, tempfile, urllib2
-from optparse import OptionParser
-
-tmpeggs = tempfile.mkdtemp()
-
-is_jython = sys.platform.startswith('java')
-
-# parsing arguments
-parser = OptionParser()
-parser.add_option("-v", "--version", dest="version",
-                          help="use a specific zc.buildout version")
-parser.add_option("-d", "--distribute",
-                   action="store_true", dest="distribute", default=False,
-                   help="Use Disribute rather than Setuptools.")
-
-parser.add_option("-c", None, action="store", dest="config_file",
-                   help=("Specify the path to the buildout configuration "
-                         "file to be used."))
-
-options, args = parser.parse_args()
-
-# if -c was provided, we push it back into args for buildout' main function
-if options.config_file is not None:
-    args += ['-c', options.config_file]
-
-if options.version is not None:
-    VERSION = '==%s' % options.version
-else:
-    VERSION = ''
-
-# We decided to always use distribute, make sure this is the default for us
-# USE_DISTRIBUTE = options.distribute
-USE_DISTRIBUTE = True
-args = args + ['bootstrap']
-
-to_reload = False
-try:
-    import pkg_resources
-    if not hasattr(pkg_resources, '_distribute'):
-        to_reload = True
-        raise ImportError
-except ImportError:
-    ez = {}
-    if USE_DISTRIBUTE:
-        exec urllib2.urlopen('http://python-distribute.org/distribute_setup.py'
-                         ).read() in ez
-        ez['use_setuptools'](to_dir=tmpeggs, download_delay=0, no_fake=True)
-    else:
-        exec urllib2.urlopen('http://peak.telecommunity.com/dist/ez_setup.py'
-                             ).read() in ez
-        ez['use_setuptools'](to_dir=tmpeggs, download_delay=0)
-
-    if to_reload:
-        reload(pkg_resources)
-    else:
-        import pkg_resources
-
-if sys.platform == 'win32':
-    def quote(c):
-        if ' ' in c:
-            return '"%s"' % c # work around spawn lamosity on windows
-        else:
-            return c
-else:
-    def quote (c):
-        return c
-
-cmd = 'from setuptools.command.easy_install import main; main()'
-ws  = pkg_resources.working_set
-
-if USE_DISTRIBUTE:
-    requirement = 'distribute'
-else:
-    requirement = 'setuptools'
-
-if is_jython:
-    import subprocess
-
-    assert subprocess.Popen([sys.executable] + ['-c', quote(cmd), '-mqNxd',
-           quote(tmpeggs), 'zc.buildout' + VERSION],
-           env=dict(os.environ,
-               PYTHONPATH=
-               ws.find(pkg_resources.Requirement.parse(requirement)).location
-               ),
-           ).wait() == 0
-
-else:
-    assert os.spawnle(
-        os.P_WAIT, sys.executable, quote (sys.executable),
-        '-c', quote (cmd), '-mqNxd', quote (tmpeggs), 'zc.buildout' + VERSION,
-        dict(os.environ,
-            PYTHONPATH=
-            ws.find(pkg_resources.Requirement.parse(requirement)).location
-            ),
-        ) == 0
-
-ws.add_entry(tmpeggs)
-ws.require('zc.buildout' + VERSION)
-import zc.buildout.buildout
-zc.buildout.buildout.main(args)
-shutil.rmtree(tmpeggs)
diff --git a/buildout.cfg b/buildout.cfg
deleted file mode 100644
index 36e9fc6..0000000
--- a/buildout.cfg
+++ /dev/null
@@ -1,16 +0,0 @@
-[buildout]
-extends = http://dist.plone.org/release/4.1b1/versions.cfg
-develop = .
-parts =
-    test
-
-unzip = true
-versions = versions
-
-[versions]
-Products.CMFEditions = 2.1.2
-
-[test]
-recipe = zc.recipe.testrunner
-eggs = Products.CMFEditions
-       Products.CMFEditions [test]
diff --git a/setup.py b/setup.py
index f362342..ce4cee0 100644
--- a/setup.py
+++ b/setup.py
@@ -39,6 +39,7 @@
     ),
     install_requires=[
         'setuptools',
+        'six',
         'zope.copy',
         'zope.dottedname',
         'zope.i18nmessageid',



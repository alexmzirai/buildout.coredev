Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-02-02T00:52:32+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.querystring/commit/7de3bb179b7df882e95f858ad46dd7e34ab001ef

Ignore unknown `sort_on` indexes when parsing a query.

Otherwise you get a `CatalogError`.

Files changed:
M CHANGES.rst
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a080eb6..9c09a80 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Ignore unknown ``sort_on`` indexes when parsing a query.
+  Otherwise you get a ``CatalogError``.  [maurits]
+
 - Add Python 2 / 3 compatibility
   [pbauer]
 
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index d1f4f18..b0ae6db 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -52,9 +52,12 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):
 
     # Add sorting (sort_on and sort_order) to the query
     if sort_on:
-        query['sort_on'] = sort_on
-    if sort_order:
-        query['sort_order'] = sort_order
+        catalog = getToolByName(context, 'portal_catalog')
+        # I get crazy sort_ons like '194' or 'null'.
+        if sort_on in catalog.indexes():
+            query['sort_on'] = sort_on
+            if sort_order:
+                query['sort_order'] = sort_order
     return query
 
 
diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 5cb63c2..45a5700 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -159,6 +159,34 @@ def test_exact_title(self):
         parsed = queryparser.parseFormquery(MockSite(), [data, ])
         self.assertEqual(parsed, {'Title': {'query': 'Welcome to Plone'}})
 
+    def test_sort_on_known(self):
+        data = {
+            'i': 'Title',
+            'o': 'plone.app.querystring.operation.string.is',
+            'v': 'Welcome to Plone',
+        }
+        parsed = queryparser.parseFormquery(
+            MockSite(), [data, ],
+            sort_on='sortable_title',
+            sort_order='reverse')
+        self.assertEqual(
+            parsed, {'Title': {'query': 'Welcome to Plone'},
+                     'sort_on': 'sortable_title',
+                     'sort_order': 'reverse'})
+
+    def test_sort_on_unknown(self):
+        data = {
+            'i': 'Title',
+            'o': 'plone.app.querystring.operation.string.is',
+            'v': 'Welcome to Plone',
+        }
+        parsed = queryparser.parseFormquery(
+            MockSite(), [data, ],
+            sort_on='unknown',
+            sort_order='reverse')
+        self.assertEqual(
+            parsed, {'Title': {'query': 'Welcome to Plone'}})
+
     def test_path_explicit(self):
         data = {
             'i': 'path',


Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-02-02T21:58:30+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/6a3d019edfdf41089e44d9fe0c60a4531acd0f9f

Merge pull request #87 from plone/ignore-unknown-sort-ons-master

Ignore unknown `sort_on` indexes when parsing a query. [master]

Files changed:
M CHANGES.rst
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a080eb6..9c09a80 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Ignore unknown ``sort_on`` indexes when parsing a query.
+  Otherwise you get a ``CatalogError``.  [maurits]
+
 - Add Python 2 / 3 compatibility
   [pbauer]
 
diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py
index d1f4f18..b0ae6db 100644
--- a/plone/app/querystring/queryparser.py
+++ b/plone/app/querystring/queryparser.py
@@ -52,9 +52,12 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):
 
     # Add sorting (sort_on and sort_order) to the query
     if sort_on:
-        query['sort_on'] = sort_on
-    if sort_order:
-        query['sort_order'] = sort_order
+        catalog = getToolByName(context, 'portal_catalog')
+        # I get crazy sort_ons like '194' or 'null'.
+        if sort_on in catalog.indexes():
+            query['sort_on'] = sort_on
+            if sort_order:
+                query['sort_order'] = sort_order
     return query
 
 
diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py
index 5cb63c2..45a5700 100644
--- a/plone/app/querystring/tests/testQueryParser.py
+++ b/plone/app/querystring/tests/testQueryParser.py
@@ -159,6 +159,34 @@ def test_exact_title(self):
         parsed = queryparser.parseFormquery(MockSite(), [data, ])
         self.assertEqual(parsed, {'Title': {'query': 'Welcome to Plone'}})
 
+    def test_sort_on_known(self):
+        data = {
+            'i': 'Title',
+            'o': 'plone.app.querystring.operation.string.is',
+            'v': 'Welcome to Plone',
+        }
+        parsed = queryparser.parseFormquery(
+            MockSite(), [data, ],
+            sort_on='sortable_title',
+            sort_order='reverse')
+        self.assertEqual(
+            parsed, {'Title': {'query': 'Welcome to Plone'},
+                     'sort_on': 'sortable_title',
+                     'sort_order': 'reverse'})
+
+    def test_sort_on_unknown(self):
+        data = {
+            'i': 'Title',
+            'o': 'plone.app.querystring.operation.string.is',
+            'v': 'Welcome to Plone',
+        }
+        parsed = queryparser.parseFormquery(
+            MockSite(), [data, ],
+            sort_on='unknown',
+            sort_order='reverse')
+        self.assertEqual(
+            parsed, {'Title': {'query': 'Welcome to Plone'}})
+
     def test_path_explicit(self):
         data = {
             'i': 'path',



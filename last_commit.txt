Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-02-06T21:38:58+01:00
Author: Saicharan Reddy (mrsaicharan1) <saicharan.reddy1@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/24e8c32cdd206e131d587e4428fb510c7d28d709

Made members folder private (#452)

Keep the Members folder private by default.

Files changed:
M CHANGES.rst
M plone/app/contenttypes/setuphandlers.py
M plone/app/contenttypes/tests/test_content_profile.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2ce7529a..c5235a0f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,7 +10,8 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Members folder made permanently private. Fixes https://github.com/plone/Products.CMFPlone/issues/2259
+  [mrsaicharan1]
 
 Bug fixes:
 
diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py
index 15a80fb8..e28d1bb2 100644
--- a/plone/app/contenttypes/setuphandlers.py
+++ b/plone/app/contenttypes/setuphandlers.py
@@ -307,7 +307,6 @@ def configure_members_folder(portal, target_language):
         container = addContentToContainer(portal, container)
         container.setOrdering('unordered')
         container.reindexObject()
-        _publish(container)
 
         # set member search as default layout to Members Area
         container.setLayout('@@member-search')
diff --git a/plone/app/contenttypes/tests/test_content_profile.py b/plone/app/contenttypes/tests/test_content_profile.py
index 03c1cc3e..08d8e116 100644
--- a/plone/app/contenttypes/tests/test_content_profile.py
+++ b/plone/app/contenttypes/tests/test_content_profile.py
@@ -93,12 +93,12 @@ def test_Members_portlets(self):
         self.assertTrue(assignable_manager.getBlacklistStatus('context'))
         self.assertTrue(assignable_manager.getBlacklistStatus('group'))
         self.assertTrue(assignable_manager.getBlacklistStatus('content_type'))
-
-    def test_Members_is_published(self):
-        # Has the content object been published?
+        
+    def test_Members_is_private(self):
+        # Is the content object public?
         obj = self.portal['Members']
         current_state = self.portal_workflow.getInfoFor(obj, 'review_state')
-        self.assertEqual(current_state, 'published')
+        self.assertEqual(current_state, 'private')
 
     # ################ #
     #   events tests   #



Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2018-01-28T11:55:38+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/ac691fe72a95fd8fc5b85baf592f2bdbb39f1db2

Prepare for Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/app/z3cform/converters.py
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/utils.py
M plone/app/z3cform/widget.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7b03697..9b92fec 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,6 +17,9 @@ Bug fixes:
 - Fix test failures from https://github.com/plone/plone.app.widgets/pull/177
   [thet]
 
+- Prepare for Python 2 / 3 compatibility
+  [pbauer]
+
 
 3.0.3 (2017-11-24)
 ------------------
diff --git a/plone/app/z3cform/converters.py b/plone/app/z3cform/converters.py
index af9036d..e43b94a 100644
--- a/plone/app/z3cform/converters.py
+++ b/plone/app/z3cform/converters.py
@@ -13,6 +13,7 @@
 from plone.uuid.interfaces import IUUID
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_callable
+from six.moves import urllib
 from z3c.form.converter import BaseDataConverter
 from z3c.form.converter import CollectionSequenceDataConverter
 from z3c.form.converter import SequenceDataConverter
@@ -29,7 +30,7 @@
 
 import json
 import pytz
-import urlparse
+import six
 
 
 @adapter(IDate, IDateWidget)
@@ -127,7 +128,7 @@ def toFieldValue(self, value):
         :rtype: list | tuple | set
         """
         separator = getattr(self.widget, 'separator', ';')
-        if isinstance(value, basestring):
+        if isinstance(value, six.string_types):
             value = value.strip()
             if value:
                 value = value.split(separator)
@@ -167,7 +168,7 @@ def toWidgetValue(self, value):
         if not value:
             return self.field.missing_value
         separator = getattr(self.widget, 'separator', ';')
-        return separator.join(unicode(v) for v in value)
+        return separator.join(six.text_type(v) for v in value)
 
     def toFieldValue(self, value):
         """Converts from widget value to field.
@@ -269,9 +270,9 @@ def toFieldValue(self, value):
                                   for uid in value
                                   if uid in objects.keys())
         else:
-            valueType = getattr(self.field.value_type, '_type', unicode)
+            valueType = getattr(self.field.value_type, '_type', six.text_type)
             if valueType is None:
-                valueType = unicode
+                valueType = six.text_type
             return collectionType(valueType(v) for v in value)
 
 
@@ -344,7 +345,7 @@ def toWidgetValue(self, value):
                 uuid = value.rsplit('/', 1)[-1]
             elif not is_absolute or is_absolute and is_same_domain:
                 # Handle relative URLs or absolute URLs on the same domain.
-                parsed = urlparse.urlparse(value)
+                parsed = urllib.parse.urlparse(value)
                 if parsed.params or parsed.query or parsed.fragment:
                     # we don't want to loose query parameters
                     # so we don't convert URLs pointing to internal
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index d166af9..70c8295 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -42,6 +42,7 @@
 import json
 import mock
 import pytz
+import six
 import unittest
 
 
@@ -1237,9 +1238,9 @@ def test_converter_List_of_Choice(self):
             List(value_type=Choice(values=['one', 'two', 'three']))
         )
         for field in fields:
-            expected_value_type = getattr(field.value_type, '_type', unicode)
+            expected_value_type = getattr(field.value_type, '_type', six.text_type)
             if expected_value_type is None:
-                expected_value_type = unicode
+                expected_value_type = six.text_type
             widget = Mock(separator=';')
             converter = RelatedItemsDataConverter(field, widget)
 
diff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py
index a62070d..c698f36 100644
--- a/plone/app/z3cform/utils.py
+++ b/plone/app/z3cform/utils.py
@@ -2,11 +2,9 @@
 from Acquisition import aq_base
 from Products.CMFCore.interfaces import IContentish
 from Products.CMFCore.interfaces import IFolderish
+from six.moves import urllib
 from zope.component.hooks import getSite
 
-import urlparse
-
-
 try:
     from zope.globalrequest import getRequest
     getRequest  # pyflakes
@@ -113,12 +111,12 @@ def is_absolute(url):
     """Return ``True``, if url is an absolute url.
     See: https://stackoverflow.com/a/8357518/1337474
     """
-    return bool(urlparse.urlparse(url).netloc)
+    return bool(urllib.parse.urlparse(url).netloc)
 
 
 def is_same_domain(url1, url2):
     """Return ``True``, if url1 is on the same protocol and domain than url2.
     """
-    purl1 = urlparse.urlparse(url1)
-    purl2 = urlparse.urlparse(url2)
+    purl1 = urllib.parse.urlparse(url1)
+    purl2 = urllib.parse.urlparse(url2)
     return purl1.scheme == purl2.scheme and purl1.netloc == purl2.netloc
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index d430f9e..1211f5b 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -63,6 +63,7 @@
 from zope.schema.vocabulary import SimpleVocabulary
 
 import json
+import six
 
 
 class BaseWidget(Widget):
@@ -296,7 +297,7 @@ def _base_args(self):
             base_items = base_items()
         items = []
         for item in base_items:
-            if not isinstance(item['content'], basestring):
+            if not isinstance(item['content'], six.string_types):
                 item['content'] = translate(
                     item['content'],
                     context=self.request,
diff --git a/setup.py b/setup.py
index df40e93..37b3e6c 100644
--- a/setup.py
+++ b/setup.py
@@ -52,6 +52,7 @@ def read(*rnames):
         'plone.app.widgets>=2.0.0.dev0',
         'plone.protect',
         'plone.z3cform>=0.5.11dev',
+        'six',
         'z3c.form >= 3.0',
         'z3c.formwidget.query',
         'zope.browserpage',


Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2018-01-28T14:10:13+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/7b871116f5c1679293539cd0d365120b7bf28044

Merge pull request #85 from plone/python3

Prepare for Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/app/z3cform/converters.py
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/utils.py
M plone/app/z3cform/widget.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 7b03697..9b92fec 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,6 +17,9 @@ Bug fixes:
 - Fix test failures from https://github.com/plone/plone.app.widgets/pull/177
   [thet]
 
+- Prepare for Python 2 / 3 compatibility
+  [pbauer]
+
 
 3.0.3 (2017-11-24)
 ------------------
diff --git a/plone/app/z3cform/converters.py b/plone/app/z3cform/converters.py
index af9036d..e43b94a 100644
--- a/plone/app/z3cform/converters.py
+++ b/plone/app/z3cform/converters.py
@@ -13,6 +13,7 @@
 from plone.uuid.interfaces import IUUID
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_callable
+from six.moves import urllib
 from z3c.form.converter import BaseDataConverter
 from z3c.form.converter import CollectionSequenceDataConverter
 from z3c.form.converter import SequenceDataConverter
@@ -29,7 +30,7 @@
 
 import json
 import pytz
-import urlparse
+import six
 
 
 @adapter(IDate, IDateWidget)
@@ -127,7 +128,7 @@ def toFieldValue(self, value):
         :rtype: list | tuple | set
         """
         separator = getattr(self.widget, 'separator', ';')
-        if isinstance(value, basestring):
+        if isinstance(value, six.string_types):
             value = value.strip()
             if value:
                 value = value.split(separator)
@@ -167,7 +168,7 @@ def toWidgetValue(self, value):
         if not value:
             return self.field.missing_value
         separator = getattr(self.widget, 'separator', ';')
-        return separator.join(unicode(v) for v in value)
+        return separator.join(six.text_type(v) for v in value)
 
     def toFieldValue(self, value):
         """Converts from widget value to field.
@@ -269,9 +270,9 @@ def toFieldValue(self, value):
                                   for uid in value
                                   if uid in objects.keys())
         else:
-            valueType = getattr(self.field.value_type, '_type', unicode)
+            valueType = getattr(self.field.value_type, '_type', six.text_type)
             if valueType is None:
-                valueType = unicode
+                valueType = six.text_type
             return collectionType(valueType(v) for v in value)
 
 
@@ -344,7 +345,7 @@ def toWidgetValue(self, value):
                 uuid = value.rsplit('/', 1)[-1]
             elif not is_absolute or is_absolute and is_same_domain:
                 # Handle relative URLs or absolute URLs on the same domain.
-                parsed = urlparse.urlparse(value)
+                parsed = urllib.parse.urlparse(value)
                 if parsed.params or parsed.query or parsed.fragment:
                     # we don't want to loose query parameters
                     # so we don't convert URLs pointing to internal
diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py
index d166af9..70c8295 100644
--- a/plone/app/z3cform/tests/test_widgets.py
+++ b/plone/app/z3cform/tests/test_widgets.py
@@ -42,6 +42,7 @@
 import json
 import mock
 import pytz
+import six
 import unittest
 
 
@@ -1237,9 +1238,9 @@ def test_converter_List_of_Choice(self):
             List(value_type=Choice(values=['one', 'two', 'three']))
         )
         for field in fields:
-            expected_value_type = getattr(field.value_type, '_type', unicode)
+            expected_value_type = getattr(field.value_type, '_type', six.text_type)
             if expected_value_type is None:
-                expected_value_type = unicode
+                expected_value_type = six.text_type
             widget = Mock(separator=';')
             converter = RelatedItemsDataConverter(field, widget)
 
diff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py
index a62070d..c698f36 100644
--- a/plone/app/z3cform/utils.py
+++ b/plone/app/z3cform/utils.py
@@ -2,11 +2,9 @@
 from Acquisition import aq_base
 from Products.CMFCore.interfaces import IContentish
 from Products.CMFCore.interfaces import IFolderish
+from six.moves import urllib
 from zope.component.hooks import getSite
 
-import urlparse
-
-
 try:
     from zope.globalrequest import getRequest
     getRequest  # pyflakes
@@ -113,12 +111,12 @@ def is_absolute(url):
     """Return ``True``, if url is an absolute url.
     See: https://stackoverflow.com/a/8357518/1337474
     """
-    return bool(urlparse.urlparse(url).netloc)
+    return bool(urllib.parse.urlparse(url).netloc)
 
 
 def is_same_domain(url1, url2):
     """Return ``True``, if url1 is on the same protocol and domain than url2.
     """
-    purl1 = urlparse.urlparse(url1)
-    purl2 = urlparse.urlparse(url2)
+    purl1 = urllib.parse.urlparse(url1)
+    purl2 = urllib.parse.urlparse(url2)
     return purl1.scheme == purl2.scheme and purl1.netloc == purl2.netloc
diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py
index d430f9e..1211f5b 100644
--- a/plone/app/z3cform/widget.py
+++ b/plone/app/z3cform/widget.py
@@ -63,6 +63,7 @@
 from zope.schema.vocabulary import SimpleVocabulary
 
 import json
+import six
 
 
 class BaseWidget(Widget):
@@ -296,7 +297,7 @@ def _base_args(self):
             base_items = base_items()
         items = []
         for item in base_items:
-            if not isinstance(item['content'], basestring):
+            if not isinstance(item['content'], six.string_types):
                 item['content'] = translate(
                     item['content'],
                     context=self.request,
diff --git a/setup.py b/setup.py
index df40e93..37b3e6c 100644
--- a/setup.py
+++ b/setup.py
@@ -52,6 +52,7 @@ def read(*rnames):
         'plone.app.widgets>=2.0.0.dev0',
         'plone.protect',
         'plone.z3cform>=0.5.11dev',
+        'six',
         'z3c.form >= 3.0',
         'z3c.formwidget.query',
         'zope.browserpage',



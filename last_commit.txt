Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2018-01-25T16:30:38+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.widgets/commit/0708510c85fe25a25422b521e7979c9c8b0e528e

Add Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/app/widgets/base.py
M plone/app/widgets/tests/test_utils.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 5ed32fc..67a0725 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,8 +17,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
-
+- Add Python 2 / 3 compatibility
+  [pbauer]
 
 2.2.2 (2017-09-05)
 ------------------
diff --git a/plone/app/widgets/base.py b/plone/app/widgets/base.py
index 3364ebe..d8c5d9e 100644
--- a/plone/app/widgets/base.py
+++ b/plone/app/widgets/base.py
@@ -4,6 +4,7 @@
 from lxml import etree
 
 import json
+import six
 
 
 def el_attrib(name):
@@ -63,7 +64,7 @@ def dict_merge(dict_a, dict_b):
     if not isinstance(dict_b, dict):
         return dict_b
     result = deepcopy(dict_a)
-    for k, v in dict_b.iteritems():
+    for k, v in six.iteritems(dict_b):
         if k in result and isinstance(result[k], dict):
                 result[k] = dict_merge(result[k], v)
         else:
@@ -230,7 +231,7 @@ def _set_value(self, value):
         :param value: We are expecting option's value which should be selected.
         :type value: list or string
         """
-        if isinstance(value, basestring):
+        if isinstance(value, six.string_types):
             value = [value]
 
         for element in self.el.iter("option"):
diff --git a/plone/app/widgets/tests/test_utils.py b/plone/app/widgets/tests/test_utils.py
index cb4aaf5..f1f62bc 100644
--- a/plone/app/widgets/tests/test_utils.py
+++ b/plone/app/widgets/tests/test_utils.py
@@ -1,3 +1,4 @@
+# -*- coding: utf-8 -*-
 from mock import Mock
 from mock import patch
 from plone.app.testing import setRoles
@@ -6,6 +7,7 @@
 from plone.app.widgets.utils import get_querystring_options
 from plone.app.widgets.utils import get_relateditems_options
 from plone.app.widgets.utils import get_tinymce_options
+from six.moves import reload_module
 
 import unittest
 
@@ -26,14 +28,15 @@ def test__first_weekday(self):
             'plone.app.event.base': mock.module.module.module,
         }
         with patch('Products.CMFCore.utils.getToolByName', new=MockTool), \
-             patch.dict('sys.modules', modules):
+                patch.dict('sys.modules', modules):
             # test for plone.app.event installed
             from plone.app.event import base
             base.first_weekday = lambda: 0
             base.wkday_to_mon1 = lambda x: x
             from plone.app.widgets import utils
-            reload(utils)  # reload utils, so that plone.app.event mock import
-                           # works, even if it was imported before.,,
+            # reload utils, so that plone.app.event mock import
+            # works, even if it was imported before.
+            reload_module(utils)
             orig_HAS_PAE = utils.HAS_PAE
             utils.HAS_PAE = True
             self.assertEqual(utils.first_weekday(), 0)
@@ -48,7 +51,7 @@ def test__first_weekday(self):
 
         # restore original state
         utils.HAS_PAE = orig_HAS_PAE
-        reload(utils)
+        reload_module(utils)
 
 
 class TestQueryStringOptions(unittest.TestCase):
diff --git a/setup.py b/setup.py
index 5470a44..e72ea08 100644
--- a/setup.py
+++ b/setup.py
@@ -35,7 +35,8 @@
         # needed for compatibility with jQuery 1.9+
         'Products.CMFPlone>=5.0.dev0',
         'five.globalrequest',
-        'plone.app.z3cform'
+        'plone.app.z3cform',
+        'six',
     ],
     extras_require={
         'test': [


Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2018-02-01T18:06:32+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/0c9f01ce104a01a37cff32f2db198338bc466a9b

Merge branch 'master' into python3

Files changed:
M CHANGES.rst
M plone/app/widgets/tests/robot/test_querystring_widget.robot
M plone/app/widgets/tests/test_robot.py
M setup.cfg
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 67a0725..d20d996 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -20,6 +20,11 @@ Bug fixes:
 - Add Python 2 / 3 compatibility
   [pbauer]
 
+- Marked unstable robotframework test as noncritical.
+  And maybe fix it by using keyword ``Wait Until Page Does Not Contain Element``.
+  [maurits]
+
+
 2.2.2 (2017-09-05)
 ------------------
 
diff --git a/plone/app/widgets/tests/robot/test_querystring_widget.robot b/plone/app/widgets/tests/robot/test_querystring_widget.robot
index 88a30c3..16ae631 100644
--- a/plone/app/widgets/tests/robot/test_querystring_widget.robot
+++ b/plone/app/widgets/tests/robot/test_querystring_widget.robot
@@ -11,19 +11,18 @@ ${querywidget_selector}  \#formfield-form-widgets-ICollection-query
 *** Test Cases ***
 
 Querystring Widget rows appear and disappear correctly
+  [Tags]  unstable
   Given I'm logged in as a 'Site Administrator'
     And I create a collection  My Collection
         Wait For Condition  return $('body.patterns-loaded').size() > 0
         Wait until page contains Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(1)
-        Sleep  1
-        Page should not contain Element   css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2)
+        Wait Until Page Does Not Contain Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2)
    When I select criteria index in row  1  Expiration date
         Wait until page contains Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2)
    When Click Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2) .querystring-criteria-remove
         Wait until page contains Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2)
    When Click Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(1) .querystring-criteria-remove
-        Sleep  1
-        Page should not contain Element   css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2)
+        Wait Until Page Does Not Contain Element  css=${querywidget_selector} .querystring-criteria-wrapper:nth-child(2)
 
 
 *** Comment out until we can figure out what is wrong with this test... ***
diff --git a/plone/app/widgets/tests/test_robot.py b/plone/app/widgets/tests/test_robot.py
index a9252ef..6891941 100644
--- a/plone/app/widgets/tests/test_robot.py
+++ b/plone/app/widgets/tests/test_robot.py
@@ -18,7 +18,8 @@ def test_suite():
         doc.startswith('test_')
     ]
     for robot_test in robot_tests:
-        robottestsuite = robotsuite.RobotTestSuite(robot_test)
+        robottestsuite = robotsuite.RobotTestSuite(
+            robot_test, noncritical=['unstable'])
         robottestsuite.level = ROBOT_TEST_LEVEL
         suite.addTests([
             layered(robottestsuite,
diff --git a/setup.cfg b/setup.cfg
index 7360489..54059c7 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -9,3 +9,10 @@ ignore =
     docs/doctrees/index.doctree
     docs/source/conf.py
     Makefile
+
+[zest.releaser]
+create-wheel = yes
+
+# When Python 2-3 compatible:
+# [bdist_wheel]
+# universal = 1
diff --git a/setup.py b/setup.py
index e72ea08..1fe498a 100644
--- a/setup.py
+++ b/setup.py
@@ -14,6 +14,7 @@
         "Framework :: Plone",
         "Framework :: Plone :: 5.0",
         "Framework :: Plone :: 5.1",
+        "License :: OSI Approved :: GNU General Public License (GPL)",
         "Programming Language :: Python",
         "Programming Language :: Python :: 2.7",
     ],


Repository: plone.app.widgets


Branch: refs/heads/master
Date: 2018-02-01T18:06:41+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.widgets/commit/9dd08a457001a776d82269513dfb86f8cb2bd415

Merge pull request #178 from plone/python3

Add Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/app/widgets/base.py
M plone/app/widgets/tests/test_utils.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index e8aeaa5..d20d996 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,6 +17,9 @@ New features:
 
 Bug fixes:
 
+- Add Python 2 / 3 compatibility
+  [pbauer]
+
 - Marked unstable robotframework test as noncritical.
   And maybe fix it by using keyword ``Wait Until Page Does Not Contain Element``.
   [maurits]
diff --git a/plone/app/widgets/base.py b/plone/app/widgets/base.py
index 3364ebe..d8c5d9e 100644
--- a/plone/app/widgets/base.py
+++ b/plone/app/widgets/base.py
@@ -4,6 +4,7 @@
 from lxml import etree
 
 import json
+import six
 
 
 def el_attrib(name):
@@ -63,7 +64,7 @@ def dict_merge(dict_a, dict_b):
     if not isinstance(dict_b, dict):
         return dict_b
     result = deepcopy(dict_a)
-    for k, v in dict_b.iteritems():
+    for k, v in six.iteritems(dict_b):
         if k in result and isinstance(result[k], dict):
                 result[k] = dict_merge(result[k], v)
         else:
@@ -230,7 +231,7 @@ def _set_value(self, value):
         :param value: We are expecting option's value which should be selected.
         :type value: list or string
         """
-        if isinstance(value, basestring):
+        if isinstance(value, six.string_types):
             value = [value]
 
         for element in self.el.iter("option"):
diff --git a/plone/app/widgets/tests/test_utils.py b/plone/app/widgets/tests/test_utils.py
index cb4aaf5..f1f62bc 100644
--- a/plone/app/widgets/tests/test_utils.py
+++ b/plone/app/widgets/tests/test_utils.py
@@ -1,3 +1,4 @@
+# -*- coding: utf-8 -*-
 from mock import Mock
 from mock import patch
 from plone.app.testing import setRoles
@@ -6,6 +7,7 @@
 from plone.app.widgets.utils import get_querystring_options
 from plone.app.widgets.utils import get_relateditems_options
 from plone.app.widgets.utils import get_tinymce_options
+from six.moves import reload_module
 
 import unittest
 
@@ -26,14 +28,15 @@ def test__first_weekday(self):
             'plone.app.event.base': mock.module.module.module,
         }
         with patch('Products.CMFCore.utils.getToolByName', new=MockTool), \
-             patch.dict('sys.modules', modules):
+                patch.dict('sys.modules', modules):
             # test for plone.app.event installed
             from plone.app.event import base
             base.first_weekday = lambda: 0
             base.wkday_to_mon1 = lambda x: x
             from plone.app.widgets import utils
-            reload(utils)  # reload utils, so that plone.app.event mock import
-                           # works, even if it was imported before.,,
+            # reload utils, so that plone.app.event mock import
+            # works, even if it was imported before.
+            reload_module(utils)
             orig_HAS_PAE = utils.HAS_PAE
             utils.HAS_PAE = True
             self.assertEqual(utils.first_weekday(), 0)
@@ -48,7 +51,7 @@ def test__first_weekday(self):
 
         # restore original state
         utils.HAS_PAE = orig_HAS_PAE
-        reload(utils)
+        reload_module(utils)
 
 
 class TestQueryStringOptions(unittest.TestCase):
diff --git a/setup.py b/setup.py
index ecae338..1fe498a 100644
--- a/setup.py
+++ b/setup.py
@@ -36,7 +36,8 @@
         # needed for compatibility with jQuery 1.9+
         'Products.CMFPlone>=5.0.dev0',
         'five.globalrequest',
-        'plone.app.z3cform'
+        'plone.app.z3cform',
+        'six',
     ],
     extras_require={
         'test': [



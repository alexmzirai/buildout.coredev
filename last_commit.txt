Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-01-31T19:40:38+01:00
Author: Davi Lima (davilima6) <davilima6@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/4747fff26a29ca649cc2c474c850bcc91c17d3d0

Prepare for Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/__init__.py
M plone/app/content/browser/folderfactories.py
M plone/app/content/browser/reviewlist.py
M plone/app/content/browser/tableview.py
M plone/app/content/browser/vocabulary.py
M plone/app/content/namechooser.py
M plone/app/content/tests/test_widgets.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2dfc9b7..ec83bdf 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,9 @@ New features:
   Fixes: https://github.com/plone/Products.CMFPlone/issues/1875
   [thet]
 
+- Prepare for Python 2 / 3 compatibility
+  [davilima6]
+
 Bug fixes:
 
 - Fix sorting by last modified.
@@ -55,6 +58,7 @@ Bug fixes:
   https://github.com/plone/Products.CMFPlone/issues/2174
   [tomgross]
 
+
 3.4.4 (2017-08-27)
 ------------------
 
@@ -115,6 +119,7 @@ Bug fixes:
 - removed unittest2 dependency.
   [kakshay21]
 
+
 3.4 (2017-04-01)
 ----------------
 
@@ -527,6 +532,7 @@ Fixes:
   regressions (see https://github.com/plone/Products.CMFPlone/issues/383)
   [cewing]
 
+
 3.0.4 (2015-05-04)
 ------------------
 
@@ -556,6 +562,7 @@ Fixes:
   use lambdas.
   [jensens]
 
+
 3.0.2 (2015-03-13)
 ------------------
 
@@ -582,6 +589,7 @@ Fixes:
 - fix removing tags with non-ascii characters in folder_contents
   [petschki]
 
+
 3.0.1 (2014-10-23)
 ------------------
 
@@ -607,6 +615,7 @@ Fixes:
 - PEP8
   [tomgross]
 
+
 3.0.0 (2014-04-13)
 ------------------
 
diff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py
index 8ec2c58..3e0ba05 100644
--- a/plone/app/content/browser/contents/__init__.py
+++ b/plone/app/content/browser/contents/__init__.py
@@ -23,6 +23,7 @@
 from zope.i18n import translate
 from zope.interface import implementer
 
+import six
 import zope.deferredimport
 
 
@@ -217,7 +218,7 @@ def get_columns(self):
         }
         # Filter out ignored
         columns = {
-            k: v for k, v in columns.iteritems()
+            k: v for k, v in six.iteritems(columns)
             if k not in self.ignored_columns
         }
         # Add in extra metadata columns
@@ -281,7 +282,7 @@ def get_indexes(self):
         }
         # Filter out ignored
         indexes = {
-            k: v for k, v in indexes.iteritems()
+            k: v for k, v in six.iteritems(indexes)
             if k not in self.ignored_indexes
         }
         # Add in extra metadata indexes
diff --git a/plone/app/content/browser/folderfactories.py b/plone/app/content/browser/folderfactories.py
index 523939d..6753ec5 100644
--- a/plone/app/content/browser/folderfactories.py
+++ b/plone/app/content/browser/folderfactories.py
@@ -9,7 +9,7 @@
 from plone.memoize.instance import memoize
 from plone.memoize.request import memoize_diy_request
 from plone.protect.authenticator import createToken
-from urllib import quote_plus
+from six.moves.urllib.parse import quote_plus
 from zope.component import getMultiAdapter
 from zope.component import queryUtility
 from zope.i18n import translate
diff --git a/plone/app/content/browser/reviewlist.py b/plone/app/content/browser/reviewlist.py
index 9965399..7c4082e 100644
--- a/plone/app/content/browser/reviewlist.py
+++ b/plone/app/content/browser/reviewlist.py
@@ -1,15 +1,15 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from zope.component import getUtility
-from Products.CMFCore.utils import getToolByName
-from Products.CMFPlone.utils import safe_unicode
 from plone.app.content.browser.tableview import Table
 from plone.app.content.browser.tableview import TableBrowserView
 from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.utils import safe_unicode
+from six.moves import urllib
 from zope.component import getMultiAdapter
+from zope.component import getUtility
 from zope.i18n import translate
 from zope.publisher.browser import BrowserView
-import urllib
 
 
 class FullReviewListView(BrowserView):
@@ -82,7 +82,7 @@ def items(self):
                                           safe_unicode(obj.Description()))
             getMember = getToolByName(obj, 'portal_membership').getMemberById
             creator_id = obj.Creator()
-            creator = getMember(creator_id)            
+            creator = getMember(creator_id)
             if creator:
                 creator_name = creator.getProperty('fullname', '') or creator_id
             else:
@@ -108,7 +108,7 @@ def items(self):
                 url=url,
                 url_href_title=url_href_title,
                 id=obj.getId(),
-                quoted_id=urllib.quote_plus(obj.getId()),
+                quoted_id=urllib.parse.quote_plus(obj.getId()),
                 path=path,
                 title_or_id=obj.pretty_title_or_id(),
                 description=obj.Description(),
diff --git a/plone/app/content/browser/tableview.py b/plone/app/content/browser/tableview.py
index 36b76ab..3918728 100644
--- a/plone/app/content/browser/tableview.py
+++ b/plone/app/content/browser/tableview.py
@@ -1,13 +1,14 @@
 # -*- coding: utf-8 -*-
-from Products.CMFPlone.utils import safe_unicode
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from ZTUtils import make_query
 from plone.batching import Batch
 from plone.batching.browser import BatchView
 from plone.memoize import instance
+from Products.CMFPlone.utils import safe_unicode
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from six.moves import urllib
 from zope.i18nmessageid import MessageFactory
 from zope.publisher.browser import BrowserView
-import urllib
+from ZTUtils import make_query
+
 
 _ = MessageFactory('plone')
 
@@ -160,7 +161,7 @@ def viewname(self):
         return self.view_url.split('?')[0].split('/')[-1]
 
     def quote_plus(self, string):
-        return urllib.quote_plus(string)
+        return urllib.parse.quote_plus(string)
 
 
 class TableBrowserView(BrowserView):
diff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py
index 99ed903..e9fafc4 100644
--- a/plone/app/content/browser/vocabulary.py
+++ b/plone/app/content/browser/vocabulary.py
@@ -1,5 +1,4 @@
 # -*- coding: utf-8 -*-
-import os
 from AccessControl import getSecurityManager
 from Acquisition import aq_base
 from logging import getLogger
@@ -28,6 +27,8 @@
 
 import inspect
 import itertools
+import os
+import six
 
 
 logger = getLogger(__name__)
@@ -89,7 +90,7 @@
 
 def _parseJSON(s):
     # XXX this should be changed to a try loads except return s
-    if isinstance(s, basestring):
+    if isinstance(s, six.string_types):
         s = s.strip()
         if (s.startswith('{') and s.endswith('}')) or \
                 (s.startswith('[') and s.endswith(']')):  # detect if json
@@ -202,7 +203,7 @@ def __call__(self):
         items = []
 
         attributes = _parseJSON(self.request.get('attributes', ''))
-        if isinstance(attributes, basestring) and attributes:
+        if isinstance(attributes, six.string_types) and attributes:
             attributes = attributes.split(',')
 
         translate_ignored = self.get_translated_ignored()
@@ -233,7 +234,7 @@ def __call__(self):
                         val = val[len(base_path):]
                     if (
                         key not in translate_ignored and
-                        isinstance(val, basestring)
+                        isinstance(val, six.string_types)
                     ):
                         item[key] = translate(
                             _(safe_unicode(val)),
@@ -266,7 +267,7 @@ def __call__(self):
 
     def parsed_query(self, ):
         query = _parseJSON(self.request.get('query', ''))
-        if isinstance(query, basestring):
+        if isinstance(query, six.string_types):
             query = {'SearchableText': {'query': query}}
         elif query:
             parsed = queryparser.parseFormquery(
diff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py
index 51ba0f5..5475a01 100644
--- a/plone/app/content/namechooser.py
+++ b/plone/app/content/namechooser.py
@@ -9,8 +9,11 @@
 from zope.component import getUtility
 from zope.container.interfaces import INameChooser
 from zope.interface import implementer
+
+import six
 import time
 
+
 ATTEMPTS = 100
 
 
@@ -41,8 +44,8 @@ def chooseName(self, name, obj):
             if not name:
                 name = obj.__class__.__name__
 
-        if not isinstance(name, unicode):
-            name = unicode(name, 'utf-8')
+        if not isinstance(name, six.text_type):
+            name = six.text_type(name, 'utf-8')
 
         request = getattr(obj.__of__(container), 'REQUEST', None)
         if request is not None:
diff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py
index 6a7255f..c37c374 100644
--- a/plone/app/content/tests/test_widgets.py
+++ b/plone/app/content/tests/test_widgets.py
@@ -14,6 +14,7 @@
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.widgets.interfaces import IFieldPermissionChecker
+from six.moves import range
 from zope.component import getMultiAdapter
 from zope.component import provideAdapter
 from zope.component import provideUtility
@@ -29,6 +30,7 @@
 import os
 import transaction
 
+
 try:
     from Products.CMFCore.indexing import processQueue
 except ImportError:
@@ -219,7 +221,7 @@ def testVocabularyCatalogUnsafeMetadataDisallowed(self):
 
     def testVocabularyBatching(self):
         amount = 30
-        for i in xrange(amount):
+        for i in range(amount):
             self.portal.invokeFactory('Document', id="page" + str(i),
                                       title="Page" + str(i))
             self.portal['page' + str(i)].reindexObject()


Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-02-01T16:44:27+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/95f34c8d3fefffe8028984d1fcef583364362d1b

Merge pull request #151 from plone/python3

Prepare for Python 2 / 3 compatibility

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/__init__.py
M plone/app/content/browser/folderfactories.py
M plone/app/content/browser/reviewlist.py
M plone/app/content/browser/tableview.py
M plone/app/content/browser/vocabulary.py
M plone/app/content/namechooser.py
M plone/app/content/tests/test_widgets.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 2dfc9b7..ec83bdf 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,6 +15,9 @@ New features:
   Fixes: https://github.com/plone/Products.CMFPlone/issues/1875
   [thet]
 
+- Prepare for Python 2 / 3 compatibility
+  [davilima6]
+
 Bug fixes:
 
 - Fix sorting by last modified.
@@ -55,6 +58,7 @@ Bug fixes:
   https://github.com/plone/Products.CMFPlone/issues/2174
   [tomgross]
 
+
 3.4.4 (2017-08-27)
 ------------------
 
@@ -115,6 +119,7 @@ Bug fixes:
 - removed unittest2 dependency.
   [kakshay21]
 
+
 3.4 (2017-04-01)
 ----------------
 
@@ -527,6 +532,7 @@ Fixes:
   regressions (see https://github.com/plone/Products.CMFPlone/issues/383)
   [cewing]
 
+
 3.0.4 (2015-05-04)
 ------------------
 
@@ -556,6 +562,7 @@ Fixes:
   use lambdas.
   [jensens]
 
+
 3.0.2 (2015-03-13)
 ------------------
 
@@ -582,6 +589,7 @@ Fixes:
 - fix removing tags with non-ascii characters in folder_contents
   [petschki]
 
+
 3.0.1 (2014-10-23)
 ------------------
 
@@ -607,6 +615,7 @@ Fixes:
 - PEP8
   [tomgross]
 
+
 3.0.0 (2014-04-13)
 ------------------
 
diff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py
index 8ec2c58..3e0ba05 100644
--- a/plone/app/content/browser/contents/__init__.py
+++ b/plone/app/content/browser/contents/__init__.py
@@ -23,6 +23,7 @@
 from zope.i18n import translate
 from zope.interface import implementer
 
+import six
 import zope.deferredimport
 
 
@@ -217,7 +218,7 @@ def get_columns(self):
         }
         # Filter out ignored
         columns = {
-            k: v for k, v in columns.iteritems()
+            k: v for k, v in six.iteritems(columns)
             if k not in self.ignored_columns
         }
         # Add in extra metadata columns
@@ -281,7 +282,7 @@ def get_indexes(self):
         }
         # Filter out ignored
         indexes = {
-            k: v for k, v in indexes.iteritems()
+            k: v for k, v in six.iteritems(indexes)
             if k not in self.ignored_indexes
         }
         # Add in extra metadata indexes
diff --git a/plone/app/content/browser/folderfactories.py b/plone/app/content/browser/folderfactories.py
index 523939d..6753ec5 100644
--- a/plone/app/content/browser/folderfactories.py
+++ b/plone/app/content/browser/folderfactories.py
@@ -9,7 +9,7 @@
 from plone.memoize.instance import memoize
 from plone.memoize.request import memoize_diy_request
 from plone.protect.authenticator import createToken
-from urllib import quote_plus
+from six.moves.urllib.parse import quote_plus
 from zope.component import getMultiAdapter
 from zope.component import queryUtility
 from zope.i18n import translate
diff --git a/plone/app/content/browser/reviewlist.py b/plone/app/content/browser/reviewlist.py
index 9965399..7c4082e 100644
--- a/plone/app/content/browser/reviewlist.py
+++ b/plone/app/content/browser/reviewlist.py
@@ -1,15 +1,15 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_inner
-from zope.component import getUtility
-from Products.CMFCore.utils import getToolByName
-from Products.CMFPlone.utils import safe_unicode
 from plone.app.content.browser.tableview import Table
 from plone.app.content.browser.tableview import TableBrowserView
 from plone.registry.interfaces import IRegistry
+from Products.CMFCore.utils import getToolByName
+from Products.CMFPlone.utils import safe_unicode
+from six.moves import urllib
 from zope.component import getMultiAdapter
+from zope.component import getUtility
 from zope.i18n import translate
 from zope.publisher.browser import BrowserView
-import urllib
 
 
 class FullReviewListView(BrowserView):
@@ -82,7 +82,7 @@ def items(self):
                                           safe_unicode(obj.Description()))
             getMember = getToolByName(obj, 'portal_membership').getMemberById
             creator_id = obj.Creator()
-            creator = getMember(creator_id)            
+            creator = getMember(creator_id)
             if creator:
                 creator_name = creator.getProperty('fullname', '') or creator_id
             else:
@@ -108,7 +108,7 @@ def items(self):
                 url=url,
                 url_href_title=url_href_title,
                 id=obj.getId(),
-                quoted_id=urllib.quote_plus(obj.getId()),
+                quoted_id=urllib.parse.quote_plus(obj.getId()),
                 path=path,
                 title_or_id=obj.pretty_title_or_id(),
                 description=obj.Description(),
diff --git a/plone/app/content/browser/tableview.py b/plone/app/content/browser/tableview.py
index 36b76ab..3918728 100644
--- a/plone/app/content/browser/tableview.py
+++ b/plone/app/content/browser/tableview.py
@@ -1,13 +1,14 @@
 # -*- coding: utf-8 -*-
-from Products.CMFPlone.utils import safe_unicode
-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from ZTUtils import make_query
 from plone.batching import Batch
 from plone.batching.browser import BatchView
 from plone.memoize import instance
+from Products.CMFPlone.utils import safe_unicode
+from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
+from six.moves import urllib
 from zope.i18nmessageid import MessageFactory
 from zope.publisher.browser import BrowserView
-import urllib
+from ZTUtils import make_query
+
 
 _ = MessageFactory('plone')
 
@@ -160,7 +161,7 @@ def viewname(self):
         return self.view_url.split('?')[0].split('/')[-1]
 
     def quote_plus(self, string):
-        return urllib.quote_plus(string)
+        return urllib.parse.quote_plus(string)
 
 
 class TableBrowserView(BrowserView):
diff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py
index 99ed903..e9fafc4 100644
--- a/plone/app/content/browser/vocabulary.py
+++ b/plone/app/content/browser/vocabulary.py
@@ -1,5 +1,4 @@
 # -*- coding: utf-8 -*-
-import os
 from AccessControl import getSecurityManager
 from Acquisition import aq_base
 from logging import getLogger
@@ -28,6 +27,8 @@
 
 import inspect
 import itertools
+import os
+import six
 
 
 logger = getLogger(__name__)
@@ -89,7 +90,7 @@
 
 def _parseJSON(s):
     # XXX this should be changed to a try loads except return s
-    if isinstance(s, basestring):
+    if isinstance(s, six.string_types):
         s = s.strip()
         if (s.startswith('{') and s.endswith('}')) or \
                 (s.startswith('[') and s.endswith(']')):  # detect if json
@@ -202,7 +203,7 @@ def __call__(self):
         items = []
 
         attributes = _parseJSON(self.request.get('attributes', ''))
-        if isinstance(attributes, basestring) and attributes:
+        if isinstance(attributes, six.string_types) and attributes:
             attributes = attributes.split(',')
 
         translate_ignored = self.get_translated_ignored()
@@ -233,7 +234,7 @@ def __call__(self):
                         val = val[len(base_path):]
                     if (
                         key not in translate_ignored and
-                        isinstance(val, basestring)
+                        isinstance(val, six.string_types)
                     ):
                         item[key] = translate(
                             _(safe_unicode(val)),
@@ -266,7 +267,7 @@ def __call__(self):
 
     def parsed_query(self, ):
         query = _parseJSON(self.request.get('query', ''))
-        if isinstance(query, basestring):
+        if isinstance(query, six.string_types):
             query = {'SearchableText': {'query': query}}
         elif query:
             parsed = queryparser.parseFormquery(
diff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py
index 51ba0f5..5475a01 100644
--- a/plone/app/content/namechooser.py
+++ b/plone/app/content/namechooser.py
@@ -9,8 +9,11 @@
 from zope.component import getUtility
 from zope.container.interfaces import INameChooser
 from zope.interface import implementer
+
+import six
 import time
 
+
 ATTEMPTS = 100
 
 
@@ -41,8 +44,8 @@ def chooseName(self, name, obj):
             if not name:
                 name = obj.__class__.__name__
 
-        if not isinstance(name, unicode):
-            name = unicode(name, 'utf-8')
+        if not isinstance(name, six.text_type):
+            name = six.text_type(name, 'utf-8')
 
         request = getattr(obj.__of__(container), 'REQUEST', None)
         if request is not None:
diff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py
index 6a7255f..c37c374 100644
--- a/plone/app/content/tests/test_widgets.py
+++ b/plone/app/content/tests/test_widgets.py
@@ -14,6 +14,7 @@
 from plone.app.testing import TEST_USER_ID
 from plone.app.testing import TEST_USER_NAME
 from plone.app.widgets.interfaces import IFieldPermissionChecker
+from six.moves import range
 from zope.component import getMultiAdapter
 from zope.component import provideAdapter
 from zope.component import provideUtility
@@ -29,6 +30,7 @@
 import os
 import transaction
 
+
 try:
     from Products.CMFCore.indexing import processQueue
 except ImportError:
@@ -219,7 +221,7 @@ def testVocabularyCatalogUnsafeMetadataDisallowed(self):
 
     def testVocabularyBatching(self):
         amount = 30
-        for i in xrange(amount):
+        for i in range(amount):
             self.portal.invokeFactory('Document', id="page" + str(i),
                                       title="Page" + str(i))
             self.portal['page' + str(i)].reindexObject()


